<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ArchLinux</title>
      <link href="/archives/undefined.html"/>
      <url>/archives/undefined.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/install#prerequisites">必须运行 Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11 才能使用以下命令。</a></p></blockquote><p>安装 <a href="https://www.microsoft.com/store/productId/9N0DX20HK701?ocid=pdpshare">Windows Terminal</a></p><ul><li>桌面–&gt;在终端中打开–&gt;Ctrl + ，打开设置–&gt;<ul><li>启动<ul><li>默认配置文件      Windows PowerShell</li><li>默认终端应用程序   Windows终端</li><li>启动参数<ul><li>在启动中居中   开</li></ul></li></ul></li><li>配置文件<ul><li>默认值<ul><li>外观<ul><li>配色方案  One Half Dark</li><li>字体      <a href="https://sourcefoundry.org/hack/">Hack</a> 是基于 Bitstream Vera 和 DejaVu 项目的开源字体，0O并且1lI清晰可辨，字体易于阅读。</li></ul></li></ul></li><li>Windows PowerShell<ul><li>以管理员身份运行此配置文件    开</li></ul></li><li>Azure Cloud Shell<ul><li>从下拉菜单中隐藏        开</li></ul></li></ul></li><li>保存</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\ultra\Desktop&gt; wsl --install --no-distribution  <span class="comment"># wsl默认安装Ubuntu   --no-distribution 不安装</span></span><br><span class="line"></span><br><span class="line">PS C:\Users\ultra\Desktop&gt; wsl --list --online  <span class="comment"># 列出所有可用的发行版(网络不太好诶)</span></span><br><span class="line">无法从“https://raw.githubusercontent.com/microsoft/WSL/master/distributions/DistributionInfo.json”中提取列表分发。操作超时</span><br><span class="line">Error code: Wsl/0x80072ee2</span><br><span class="line">PS C:\Users\ultra\Desktop&gt; wsl --list --online  <span class="comment"># 好惹</span></span><br><span class="line">以下是可安装的有效分发的列表。</span><br><span class="line">使用 <span class="string">&#x27;wsl.exe --install &lt;Distro&gt;&#x27;</span> 安装。</span><br><span class="line"></span><br><span class="line">NAME                                   FRIENDLY NAME</span><br><span class="line">Ubuntu                                 Ubuntu</span><br><span class="line">Debian                                 Debian GNU/Linux</span><br><span class="line">kali-linux                             Kali Linux Rolling</span><br><span class="line">Ubuntu-18.04                           Ubuntu 18.04 LTS</span><br><span class="line">Ubuntu-20.04                           Ubuntu 20.04 LTS</span><br><span class="line">Ubuntu-22.04                           Ubuntu 22.04 LTS</span><br><span class="line">OracleLinux_7_9                        Oracle Linux 7.9</span><br><span class="line">OracleLinux_8_7                        Oracle Linux 8.7</span><br><span class="line">OracleLinux_9_1                        Oracle Linux 9.1</span><br><span class="line">openSUSE-Leap-15.5                     openSUSE Leap 15.5</span><br><span class="line">SUSE-Linux-Enterprise-Server-15-SP4    SUSE Linux Enterprise Server 15 SP4</span><br><span class="line">SUSE-Linux-Enterprise-15-SP5           SUSE Linux Enterprise 15 SP5</span><br><span class="line">openSUSE-Tumbleweed                    openSUSE Tumbleweed</span><br><span class="line"></span><br><span class="line">wsl --install --distribution <span class="comment"># 指定要安装的Linux发行版 </span></span><br><span class="line"></span><br><span class="line">wsl --update    <span class="comment"># 更新WSL</span></span><br><span class="line"></span><br><span class="line">wsl --shutdown  <span class="comment"># 关闭所有正在运行的Linux发行版（无法使用传统的方式关机）</span></span><br></pre></td></tr></table></figure><p>OR <a href="https://www.microsoft.com/store/productId/9MZNMNKSM73X?ocid=pdpshare">微软商店 Arch WSL （非官方 且不推荐）</a></p><blockquote><p><a href="https://learn.microsoft.com/zh-cn/windows/wsl/wsl-config#example-wslconf-file">示例 wsl.conf 文件</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\ultra\Desktop&gt; <span class="built_in">cd</span> ~</span><br><span class="line">PS C:\Users\ultra&gt; New-Item -Path . -Name <span class="string">&quot;.wslconfig.txt&quot;</span> -ItemType <span class="string">&quot;file&quot;</span> -Value <span class="string">&quot;This is a text string.&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    目录: C:\Users\ultra</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----         2024/2/14     13:12             22 .wslconfig.txt</span><br><span class="line"></span><br><span class="line">PS C:\Users\ultra&gt; .\.wslconfig.txt</span><br><span class="line">[wsl2]</span><br><span class="line">memory=16GB</span><br><span class="line">swap=4GB</span><br><span class="line"></span><br><span class="line">[experimental]</span><br><span class="line">autoMemoryReclaim=gradual</span><br><span class="line">networkimgMode=mirrored</span><br><span class="line">dnsTunneling=<span class="literal">true</span></span><br><span class="line">firewall=<span class="literal">true</span></span><br><span class="line">autoProxy=<span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/yuk7/ArchWSL/releases/download/22.10.16.0/Arch.zip">另一个 Arch Linux 项目</a></p></blockquote><ul><li>下载 –&gt; 解压<ul><li>Arch.exe     复制多个EXE文件并重命名就可以拥有多个Arch且不冲突</li><li>双击 Archultralinux.exe       安装rootfs并完成注册表配置<ul><li>第一次运行程序会创建一个硬盘镜像 ext4.vhdx ，会随着后续的使用越来越大</li><li>完成 回车</li></ul></li><li>二次双击      进入系统，第一次会配置一些东西 须等待<ul><li>默认root账户登录   [root@wgzjjrs yuk7]#</li></ul></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@wgzjjrs yuk7]<span class="comment"># passwd     # 设置root密码</span></span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@wgzjjrs yuk7]<span class="comment"># echo &quot;%wheel ALL=(ALL) ALL&quot; &gt; /etc/sudoers.d/wheel    # 添加一行用户组的设置</span></span><br><span class="line">[root@wgzjjrs yuk7]<span class="comment"># useradd -m -G wheel -s /bin/bash ultralinux    # 添加日常使用的账户</span></span><br><span class="line">[root@wgzjjrs yuk7]<span class="comment"># passwd ultralinux</span></span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line">[root@wgzjjrs yuk7]<span class="comment"># exit   # 退出</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认登录账户</span></span><br><span class="line">PS C:\DATA\WSL2\ArchLinux\yuk7&gt; .\Archultralinux.exe config --default-user ultralinux</span><br><span class="line">！！PS C:\DATA\WSL2\ArchLinux\yuk7&gt; .\Archultralinux.exe --clean   !! 卸载 ！！</span><br><span class="line"><span class="comment"># 再次 双击Archultralinux.exe  # 登录的默认账户为修改后的 ultalinux</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment"># 初始化密钥环来使用pacman</span></span><br><span class="line">[ultralinux@wgzjjrs yuk7]$ sudo pacman-key --init</span><br><span class="line"><span class="comment"># sudo     do as super    以系统管理员的身份执行命令</span></span><br><span class="line">We trust you have received the usual lecture from the <span class="built_in">local</span> System</span><br><span class="line">Administrator. It usually boils down to these three things:</span><br><span class="line"></span><br><span class="line">    <span class="comment">#1) Respect the privacy of others.</span></span><br><span class="line">    <span class="comment">#2) Think before you type.</span></span><br><span class="line">    <span class="comment">#3) With great power comes great responsibility.</span></span><br><span class="line"><span class="comment"># pacman 是archlinux的包管理器</span></span><br><span class="line">[sudo] password <span class="keyword">for</span> ultralinux:</span><br><span class="line">==&gt; Generating pacman master key. This may take some time.</span><br><span class="line">gpg: Generating pacman keyring master key...</span><br><span class="line">gpg: directory <span class="string">&#x27;/etc/pacman.d/gnupg/openpgp-revocs.d&#x27;</span> created</span><br><span class="line">gpg: revocation certificate stored as <span class="string">&#x27;/etc/pacman.d/gnupg/openpgp-revocs.d/55BD8A316F15D19B0E75B360D10F59BC78BC1C50.rev&#x27;</span></span><br><span class="line">gpg: Done</span><br><span class="line">==&gt; Updating trust database...</span><br><span class="line">gpg: marginals needed: 3  completes needed: 1  trust model: pgp</span><br><span class="line">gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u</span><br><span class="line">[ultralinux@wgzjjrs yuk7]$ sudo pacman-key --populate</span><br><span class="line">==&gt; Appending keys from archlinux.gpg...</span><br><span class="line">==&gt; Locally signing trusted keys <span class="keyword">in</span> keyring...</span><br><span class="line">  -&gt; Locally signed 6 keys.</span><br><span class="line">==&gt; Importing owner trust values...</span><br><span class="line">gpg: setting ownertrust to 4</span><br><span class="line">gpg: setting ownertrust to 4</span><br><span class="line">gpg: setting ownertrust to 4</span><br><span class="line">gpg: setting ownertrust to 4</span><br><span class="line">gpg: inserting ownertrust of 4</span><br><span class="line">gpg: setting ownertrust to 4</span><br><span class="line">==&gt; Disabling revoked keys <span class="keyword">in</span> keyring...</span><br><span class="line">  -&gt; Disabled 52 keys.</span><br><span class="line">==&gt; Updating trust database...</span><br><span class="line">gpg: marginals needed: 3  completes needed: 1  trust model: pgp</span><br><span class="line">gpg: depth: 0  valid:   1  signed:   6  trust: 0-, 0q, 0n, 0m, 0f, 1u</span><br><span class="line">gpg: depth: 1  valid:   6  signed:  73  trust: 0-, 0q, 0n, 6m, 0f, 0u</span><br><span class="line">gpg: depth: 2  valid:  56  signed:  24  trust: 56-, 0q, 0n, 0m, 0f, 0u</span><br><span class="line">gpg: next trustdb check due at 2024-02-29</span><br><span class="line">[ultralinux@wgzjjrs yuk7]$ sudo pacman -Syy archlinux-keyring</span><br></pre></td></tr></table></figure><p>问题可参阅<a href="https://wsldl-pg.github.io/ArchW-docs/locale/zh-CN/">项目官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ultralinux@wgzjjrs yuk7]$ <span class="built_in">pwd</span>      <span class="comment"># 由于刚刚是从文件夹打开</span></span><br><span class="line">/mnt/c/DATA/WSL2/ArchLinux/yuk7     <span class="comment"># 所以路径不对</span></span><br><span class="line">[ultralinux@wgzjjrs yuk7]$ <span class="built_in">cd</span> ~     <span class="comment"># ultralinux家目录</span></span><br><span class="line">[ultralinux@wgzjjrs ~]$ <span class="built_in">pwd</span></span><br><span class="line">/home/ultralinux</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinux/">Arch Linux 软件仓库</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[ultralinux@wgzjjrs ~]$ sudo vim /etc/pacman.d/mirrorlist</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span>      <span class="comment"># 添加至第一行</span></span><br><span class="line">[ultralinux@wgzjjrs ~]$ sudo pacman -Syyu   <span class="comment"># 更新软件包缓存 两次 y 能避免从损坏的镜像切换到正常的镜像时出现的问题。</span></span><br><span class="line">:: Starting full system upgrade...</span><br><span class="line">resolving dependencies...</span><br><span class="line">:: There are 2 providers available <span class="keyword">for</span> dbus-units:</span><br><span class="line">:: Repository core</span><br><span class="line">   1) dbus-broker-units  2) dbus-daemon-units</span><br><span class="line"></span><br><span class="line">Enter a number (default=1): 2    <span class="comment"># 建议选2</span></span><br></pre></td></tr></table></figure><p>我们完成了 WindowsTerminal、WSL以及ArchLinux的安装和最基本的配置</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2024重启</title>
      <link href="/archives/8fc641e6.html"/>
      <url>/archives/8fc641e6.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、前置"><a href="#一、前置" class="headerlink" title="一、前置"></a>一、前置</h2><ul><li>服务器<ul><li>选用阿里云<ul><li>有个中意的活动</li></ul></li></ul></li><li>域名<ul><li>wgzjjrs.com<ul><li>阿里云icp备案</li></ul></li></ul></li><li>网站<ul><li>openresty + hexo<ul><li>基于原站内容修改</li></ul></li></ul></li></ul><h2 id="二、本次操作过程"><a href="#二、本次操作过程" class="headerlink" title="二、本次操作过程"></a>二、本次操作过程</h2><h3 id="1-服务器"><a href="#1-服务器" class="headerlink" title="1.服务器"></a>1.服务器</h3><h4 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h4><ul><li>操作系统 Alibaba Cloud Linux release 3 (Soaring Falcon) </li><li>远程控制<ul><li>通过阿里云客户端连接实例<ul><li>名称（随便） ultralinux-profile</li><li>模式        AccessKey</li><li>AccessKey ID（参考<a href="https://help.aliyun.com/zh/ram/user-guide/create-an-accesskey-pair">如何获取AccessKey</a>）</li><li>AccessKey Secret (参考<a href="https://help.aliyun.com/zh/ram/user-guide/manage-security-settings-of-ram-users?spm=a2c4g.11186623.0.i3#task-188786">忘记了</a>)</li><li>默认地域（云主机的地域）</li><li>资源组（忽略）</li></ul></li><li>通过会话管理远程连接<ul><li>会话管理以开启（全地域）  开启</li><li>[ 修改用户安全设置 ] 部上 第二个连接<ul><li>保存MFA验证状态7天  允许</li><li>自主管理密码        允许</li><li>自主管理AccessKey   允许</li><li>自主管理MFA设备     允许</li><li>登陆时必须使用MFA   强制所有用户</li><li>多因素认证手段      √MFA设备   √手机</li><li>自主管理钉钉        允许</li><li>允许阿里云App保持长登录   允许</li><li>登录会话时间        6小时</li><li>登录掩码设置      外and内网IP地址</li></ul></li></ul></li></ul></li></ul><blockquote><p><a href="https://openresty.org/cn/linux-packages.html#alibaba-cloud-linux"> Alibaba Cloud Linux 安装 OpenResty</a></p></blockquote><h4 id="以rpm包的方式安装OpenResty、Node-js、Git"><a href="#以rpm包的方式安装OpenResty、Node-js、Git" class="headerlink" title="以rpm包的方式安装OpenResty、Node.js、Git"></a>以rpm包的方式安装OpenResty、Node.js、Git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum install pcre-devel openssl-devel gcc curl -y</span><br><span class="line"><span class="comment"># 新增仓库</span></span><br><span class="line">wget https://openresty.org/package/alinux/openresty.repo</span><br><span class="line">sudo <span class="built_in">mv</span> openresty.repo /etc/yum.repos.d/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新索引</span></span><br><span class="line">sudo yum check-update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 OpenResty &amp; 命令行工具包</span></span><br><span class="line">yum install -y openresty openresty-resty</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://rpm.nodesource.com/">安装Node.js最新版rpm包</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum install https://rpm.nodesource.com/pub_20.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将nodesource-nodistro.repo中gpgcheck = 1改0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">yum install nodejs -y</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://git-scm.com/download/linux">安装 Git</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install git <span class="comment"># 安装Git</span></span><br><span class="line">git --vesion</span><br></pre></td></tr></table></figure><h4 id="OpenResty-下-Nginx-简配"><a href="#OpenResty-下-Nginx-简配" class="headerlink" title="OpenResty 下 Nginx 简配"></a>OpenResty 下 Nginx 简配</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /var/www/ultralinux-profile          <span class="comment"># 创建用于hexo部署目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Nginx 账户</span></span><br><span class="line">groupadd nginx </span><br><span class="line">useradd -g nginx -s /sbin/nologin -M nginx</span><br><span class="line"></span><br><span class="line">。。。。。。。。。。。。。。。。。。。。。。。。。。（暂略）</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openresty -t    <span class="comment"># 检查配置文件语法</span></span><br><span class="line">openresty -s reload     <span class="comment"># 重载</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl status or start or stop or enable or disable xxxxxxx.service</span></span><br></pre></td></tr></table></figure><h4 id="创建Git账户用于远程免密登录服务器"><a href="#创建Git账户用于远程免密登录服务器" class="headerlink" title="创建Git账户用于远程免密登录服务器"></a>创建Git账户用于远程免密登录服务器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">adduser git <span class="comment"># 创建Git用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改Git账户权限</span></span><br><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br><span class="line">找到root All = (ALL) ALL,在下一行添加 git ALL = （ALL）ALL</span><br><span class="line"><span class="built_in">chmod</span> 400 /etc/sudoers <span class="comment"># 保存后改回权限（必须）</span></span><br><span class="line">passwd git <span class="comment"># 设置git账户密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alibaba Cloud Linux 默认无法使用密码远程登录，须修改</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">找到参数 PasswordAuthentication no 中no修改为 <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">此时git账户即可ssh远程登录</span><br></pre></td></tr></table></figure><ul><li>服务器端<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - git</span><br><span class="line"><span class="built_in">cd</span> ~   <span class="comment"># /home/git/</span></span><br><span class="line"><span class="built_in">mkdir</span> .ssh <span class="comment"># Git账户家目录的所有者须为git:git</span></span><br></pre></td></tr></table></figure></li><li>本机客户端<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 右键打开 Open Git Bash here 命令行</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br><span class="line">ssh-keygen <span class="comment"># 生成密钥，交互界面直接回车即可</span></span><br><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh</span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/id_rsa  <span class="comment"># rsa为私钥，可能为 id_ed25500 数字部分随机</span></span><br></pre></td></tr></table></figure><a href="https://help.aliyun.com/zh/cloud-web-hosting/user-guide/use-filezilla-management-files">本机Windows客户端安装FTP工具(此处由阿里云提供File Zilla)</a></li></ul><p>打开FileZilla，使用git用户通过22端口远程连接到阿里云服务器，将客户端生成的公钥上传到服务器的~&#x2F;.ssh #(&#x2F;home&#x2F;git&#x2F;.ssh&#x2F;) 目录下。</p><p><img src="https://pic4.zhimg.com/80/v2-8693826b15098785946437346faf502b_1440w.webp" alt="参考此图"></p><ul><li>上传完成后，切回服务器端使用 Git 账户操作<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh # Git用户的家目录，我这里为/home/git/.ssh</span><br><span class="line"></span><br><span class="line"># id_ras.pub是公钥，可能为 id_ed25500.pub 数字部分随机</span><br><span class="line">cp id_ras.pub authorized_keys or cat id_ras.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br><span class="line"></span><br><span class="line">restorecon -Rv ~/.ssh   # 确保设置了正确的SELinux上下文</span><br><span class="line"></span><br><span class="line">此时，在本机客户端 SSH 登录服务器时无需输入密码</span><br><span class="line">ssh -v git@xxx.xxx.xxx.xxx（阿里云公网IP） or  ssh git@xxx.xxx.xxx.xxx（阿里云公网IP）</span><br></pre></td></tr></table></figure></li></ul><h4 id="配置-Git-仓库-须使用-Git-账户操作"><a href="#配置-Git-仓库-须使用-Git-账户操作" class="headerlink" title="配置 Git 仓库(须使用 Git 账户操作)"></a>配置 Git 仓库(须使用 Git 账户操作)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~ <span class="comment"># 我这里为 /home/git/</span></span><br><span class="line">git init --bare ultralinux-profile.git</span><br><span class="line">vim /home/git/ultralinux-profile.git/hooks/post-receive <span class="comment"># Git账户家目录，此处为/home/git/</span></span><br><span class="line">[git@iZuf6bhjh64y6qq91x524Z ~]$ <span class="built_in">cat</span> /home/git/ultralinux-profile.git/hooks/post-receive </span><br><span class="line"><span class="comment"># 让钩子文件删除/var/www/ultralinux-profile目录下原有的文件，然后从blog.git仓库 clone 新的博客静态文件到/home/www/ultralinux-profile目录下</span></span><br><span class="line">git --work-tree=/var/www/ultralinux-profile --git-dir=/home/git/ultralinux-profile.git checkout -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授予钩子文件可执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /home/git/ultralinux-profile.git/hooks/post-receive </span><br><span class="line"><span class="built_in">cd</span> ~   <span class="comment"># 注意：此处为 Git 账户的家目录此处为/home/git/,而root的家目录为/root/。须注意分辨</span></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> -R 777 /var/www/ultralnux-profile/   <span class="comment"># 此命令必须使用root账户 OR root权限执行</span></span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="2-客户端（基于原ultralinux-cn进行修改）"><a href="#2-客户端（基于原ultralinux-cn进行修改）" class="headerlink" title="2. 客户端（基于原ultralinux.cn进行修改）"></a>2. 客户端（基于原ultralinux.cn进行修改）</h3><h4 id="安装-Node-js-、Git-、Hexo"><a href="#安装-Node-js-、Git-、Hexo" class="headerlink" title="安装 Node.js 、Git 、Hexo"></a>安装 <a href="https://nodejs.org/en/">Node.js</a> 、<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">Git</a> 、Hexo</h4><ul><li>官网下载Windows (x64)长期支持版 Long Term Support (LTS) schedule<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">ultra@wgzjjrs MINGW64 ~/Desktop</span><br><span class="line">$ node -v   <span class="comment"># 验证</span></span><br><span class="line">v20.11.0</span><br><span class="line"></span><br><span class="line">ultra@wgzjjrs MINGW64 ~/Desktop</span><br><span class="line">$ npm -v    <span class="comment"># Node.js中自带npm包管理工具</span></span><br><span class="line">10.2.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># Git 一手下一步即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于我的原因顾此操作</span></span><br><span class="line">npm install -g hexo-cli     <span class="comment"># 安装Hexo</span></span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line">git config --global user.name ultralinus <span class="comment">#用户名和邮箱与GitHub保持一致</span></span><br><span class="line">git config --global user.email ultralinus@ultralinus.cn</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# ultralinux.github.io&quot;</span> &gt;&gt; README.md <span class="comment">#默认就这个,不管</span></span><br><span class="line">git init <span class="comment"># 初始化git仓库 or git clone 仓库地址 # 克隆</span></span><br><span class="line">git remote add origin https://github.com/github仓库地址/xxx.github.io.git  <span class="comment">#绑定</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">作者: ultralinux</span><br><span class="line">链接: http://106.15.54.132/archives/e5e92e82.html<span class="comment">#Git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6</span></span><br><span class="line">来源: ultralinux_blog</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line">$ git config --global user.email <span class="string">&quot;xxxxxxxxxx@qq.com&quot;</span></span><br><span class="line">$ git config --global user.name “<span class="built_in">test</span>”</span><br><span class="line">$ git <span class="built_in">clone</span> 仓库地址   <span class="comment"># 克隆原项目</span></span><br><span class="line">$ git remote add origin https://github.com/github仓库地址/xxx.github.io.git  <span class="comment">#绑定</span></span><br><span class="line">$ npm install         <span class="comment"># 使用npm安装依赖 (克隆仓库需一般没有依赖重新安装)</span></span><br><span class="line">$ hexo s <span class="comment"># 预览测试 我之前优化过执行命令—— package.json  &quot;server&quot;: &quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server&quot;, 一条顶三条</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># npm install hexo-deployer-git --save</span></span><br><span class="line"><span class="comment">#利用hexo-deployer-git 一键部署（关于本站所有 中）</span></span><br><span class="line">$ hexo d <span class="comment"># 发布到服务器    同上 &quot;deploy&quot;: &quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;,</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  - <span class="built_in">type</span>: git <span class="comment"># Git </span></span><br><span class="line">    repo: </span><br><span class="line">      ultralinux-profile: 账户@公网IP地址:/home/git/ultralinux-profile.git  <span class="comment">#在原有的基础上添加此行</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2><h2 id="-3"><a href="#-3" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> ultralinux_blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ultralinux.cn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>20230504工作</title>
      <link href="/archives/98b6840a.html"/>
      <url>/archives/98b6840a.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 20230504工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 20230504工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rust-2-写个猜数字游戏</title>
      <link href="/archives/ec84e1d7.html"/>
      <url>/archives/ec84e1d7.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="准备一个新项目"><a href="#准备一个新项目" class="headerlink" title="准备一个新项目"></a>准备一个新项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\ultra\projects&gt; <span class="built_in">cd</span> <span class="string">&#x27;.\Rust 程序设计语言\\&#x27;</span></span><br><span class="line">PS C:\Users\ultra\projects\Rust 程序设计语言&gt; cargo new guessing_game</span><br><span class="line">     Created binary (application) `guessing_game` package</span><br><span class="line">PS C:\Users\ultra\projects\Rust 程序设计语言&gt; <span class="built_in">cd</span> g*</span><br><span class="line">PS C:\Users\ultra\projects\Rust 程序设计语言\guessing_game&gt; code .</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::io;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Guess the number!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Please input your guess.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">guess</span> = <span class="type">String</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line"></span><br><span class="line">    io::<span class="title function_ invoke__">stdin</span>()</span><br><span class="line">        .<span class="title function_ invoke__">read_line</span>(&amp;<span class="keyword">mut</span> guess)</span><br><span class="line">        .<span class="title function_ invoke__">expect</span>(<span class="string">&quot;Failed to read line&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;You guessed: &#123;guess&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.ultralinux.cn/img/202303080909915.png?imageslim" alt="安装Rust相关插件前"></p><p><img src="https://img.ultralinux.cn/img/202303080915531.png?imageslim" alt="安装Rust相关插件后,走了一次编译生成了target文件夹andCargo.lock文件"></p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[package]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;guessing_game&quot;</span>   项目名</span><br><span class="line"><span class="attr">version</span> = <span class="string">&quot;0.1.0&quot;</span> 版本</span><br><span class="line"><span class="attr">edition</span> = <span class="string">&quot;2021&quot;</span>         rust版本</span><br><span class="line"></span><br><span class="line"><span class="comment"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span></span><br><span class="line"></span><br><span class="line"><span class="section">[dependencies]</span>           第三方依赖库</span><br></pre></td></tr></table></figure><p><img src="https://img.ultralinux.cn/img/202303080924904.png?imageslim" alt="运行一下试试"></p><h2 id="处理一次猜测"><a href="#处理一次猜测" class="headerlink" title="处理一次猜测"></a>处理一次猜测</h2><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>use std::io;</td><td>获取用户输入并输入</td><td>将io输入&#x2F;输出库引入当前作用域</td><td><code>io</code> 库来自于标准库，也被称为 <code>std</code>：</td></tr><tr><td>fn main() {</td><td><code>main</code> 函数是程序的入口点</td><td><code>fn</code> 语法声明了一个新函数</td><td>小括号 <code>()</code> 表明没有参数，大括号 <code>&#123;</code> 作为函数体的开始</td></tr><tr><td>println!(“Guess the number!”);     println!(“Please input your guess.”);</td><td>打印提示，介绍游戏的内容然后请求用户输入。</td><td><code>println!</code> 是一个在屏幕上打印字符串的宏</td><td></td></tr></tbody></table><p><a href="https://doc.rust-lang.org/std/prelude/index.html">标准库文档</a>查看预导入(preclude)内容,默认自动导入到每个程序作用域中的标准库内容 &amp;&amp; <code>use</code> 语句显式地将其引入作用域。<code>std::io</code> 库提供很多有用的功能，包括接收用户输入的功能。</p><h3 id="使用变量存储值"><a href="#使用变量存储值" class="headerlink" title="使用变量存储值"></a>使用变量存储值</h3><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>let mut guess &#x3D; String::new();</td><td>创建一个 <strong>变量</strong>（<em>variable</em>）来储存用户输入</td><td>创建了一个可变变量，当前它绑定到一个新的 <code>String</code> 空实例上</td><td></td></tr><tr><td>let apples &#x3D; 5; &#x2F;&#x2F; 不可变</td><td>另外一个例子</td><td>新建了一个叫做 <code>apples</code> 的变量并把它绑定到值 <code>5</code> 上</td><td>在 Rust 中，<strong>变量默认是不可变</strong>的</td></tr><tr><td>let mut bananas &#x3D; 5; &#x2F;&#x2F; 可变</td><td>注意：<code>//</code> 语法开始一个注释，持续到行尾。Rust 忽略注释中的所有内容</td><td></td><td>在变量名前使用 <code>mut</code> 来使一个变量可变</td></tr><tr><td><code>let mut guess</code> 会引入一个叫做 <code>guess</code> 的可变变量</td><td>等号（<code>=</code>）告诉 Rust 我们现在想将某个值绑定在变量上,等号的右边是 <code>guess</code> 所绑定的值.</td><td>它是 <code>String::new</code> 的结果，这个函数会返回一个 <code>String</code> 的新实例。</td><td><a href="https://doc.rust-lang.org/std/string/struct.String.html"><code>String</code></a> 是一个标准库提供的字符串类型，它是<strong>UTF-8 编码的可增长文本块</strong>。</td></tr><tr><td><code>::new</code> 那一行的 <code>::</code> 语法表明</td><td><code>new</code> 是 <code>String</code> 类型的一个 <strong>关联函数</strong>（<em>associated function</em>）</td><td>关联函数是针对类型实现的，在这个例子中是 <code>String</code>，而不是 <code>String</code> 的某个特定实例</td><td>一些语言中把它称为 <strong>静态方法</strong>（<em>static method</em>）</td></tr></tbody></table><h3 id="接受用户输入"><a href="#接受用户输入" class="headerlink" title="接受用户输入"></a>接受用户输入</h3><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>io::stdin()</td><td>程序的第一行使用 <code>use std::io;</code> 从标准库中引入了输入&#x2F;输出功能。</td><td>现在调用 <code>io</code> 库中的函数 <code>stdin</code></td><td>如果程序的开头没有使用 <code>use std::io;</code> 引入 <code>io</code> 库，我们仍可以通过把函数调用写成 <code>std::io::stdin</code> 来使用函数。<code>stdin</code> 函数返回一个 <a href="https://doc.rust-lang.org/std/io/struct.Stdin.html"><code>std::io::Stdin</code></a> 的实例，这代表终端标准输入<strong>句柄的类型</strong>。</td></tr><tr><td>.read_line(&amp;mut guess)</td><td>调用 <a href="https://doc.rust-lang.org/std/io/struct.Stdin.html#method.read_line"><code>read_line</code></a> 方法从标准输入句柄获取用户输入</td><td>将 <code>&amp;mut guess</code> 作为参数传递给 <code>read_line()</code> 函数</td><td>让其将用户输入储存到这个字符串中</td></tr><tr><td><code>read_line</code> 的工作</td><td>无论用户在标准输入中键入什么内容，都将其追加（不会覆盖其原有内容）到一个字符串中</td><td>因此它需要字符串作为参数,这个字符串参数应该是可变的</td><td>以便 <code>read_line</code> 将用户输入附加上去</td></tr><tr><td><code>&amp;</code> 表示这个参数是一个 <strong>引用</strong>（<em>reference</em>）</td><td>它允许多处代码访问同一处数据，而无需在内存中多次拷贝</td><td>引用是一个复杂的特性，Rust 的一个主要优势就是安全而简单的操纵引用</td><td>现在，我们只需知道它像变量一样，默认是不可变的。因此，需要写成 <code>&amp;mut guess</code> 来使其可变，而不是 <code>&amp;guess</code></td></tr></tbody></table><h3 id="使用-Result-类型来处理潜在的错误"><a href="#使用-Result-类型来处理潜在的错误" class="headerlink" title="使用 Result 类型来处理潜在的错误"></a>使用 <code>Result</code> 类型来处理潜在的错误</h3><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>.expect(“Failed to read line”);</td><td>第三行代码，注意：它仍是逻辑行（虽然换行了但仍是语句）的一部分</td><td>通常来说，当使用 <code>.method_name()</code> 语法调用方法时引入换行符和空格将长的代码行拆开是明智的</td><td>这里的 <code>Result</code> 类型将用来编码错误处理的信息。</td></tr><tr><td>read_line</td><td>会将用户输入附加到传递给它的字符串中</td><td>不过它也会返回一个类型为 <code>Result</code> 的值</td><td><a href="https://doc.rust-lang.org/std/result/enum.Result.html"><code>Result</code></a> 是一种<a href="https://kaisery.github.io/trpl-zh-cn/ch06-00-enums.html"><em>枚举类型</em></a>，通常也写作 <em>enum</em>。枚举类型变量的值可以是多种可能状态中的一个。我们把每种可能的状态称为一种 <em>枚举成员（variant）</em>。</td></tr><tr><td><code>Result</code> 的成员是 <code>Ok</code> 和 <code>Err</code>，<code>Ok</code> 成员表示操作成功，内部包含成功时产生的值。<code>Err</code> 成员则意味着操作失败，并且包含失败的前因后果。</td><td>这些 <code>Result</code> 类型的作用是编码错误处理信息。<code>Result</code> 类型的值，像其他类型一样，拥有定义于其上的方法。<code>Result</code> 的实例拥有 <a href="https://doc.rust-lang.org/std/result/enum.Result.html#method.expect"><code>expect</code> 方法</a>。如果 <code>io::Result</code> 实例的值是 <code>Err</code>，<code>expect</code> 会导致程序崩溃，并显示当做参数传递给 <code>expect</code> 的信息。如果 <code>read_line</code> 方法返回 <code>Err</code>，则可能是来源于底层操作系统错误的结果。如果 <code>Result</code> 实例的值是 <code>Ok</code>，<code>expect</code> 会获取 <code>Ok</code> 中的值并原样返回。在本例中，这个值是用户输入到标准输入中的字节数。</td><td>如果不调用 <code>expect</code>，程序也能编译，不过会出现一个警告：Rust 警告我们没有使用 <code>read_line</code> 的返回值 <code>Result</code>，说明有一个可能的错误没有处理。</td><td>消除警告的正确做法是实际去编写错误处理代码，不过由于我们就是希望程序在出现问题时立即崩溃，所以直接使用 <code>expect</code>。</td></tr></tbody></table><h3 id="使用println-占位符打印值"><a href="#使用println-占位符打印值" class="headerlink" title="使用println!占位符打印值"></a>使用println!占位符打印值</h3><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>println!(“You guessed: {guess}”);</td><td>打印了存储用户输入的字符串</td><td>里面的 <code>&#123;&#125;</code> 是预留在特定位置的占位符：把 <code>&#123;&#125;</code> 想象成小蟹钳，可以夹住合适的值</td><td>当打印变量的值时，变量名可以写进大括号中。当打印表达式的执行结果时，格式化字符串（format string）中大括号中留空，格式化字符串后跟逗号分隔的需要打印的表达式列表，其顺序与每一个空大括号占位符的顺序一致。</td></tr><tr><td>在一个 <code>println!</code> 调用中打印变量和表达式的值看起来像这样：</td><td>let x &#x3D; 5;                                let y &#x3D; 10;                             println!(“x &#x3D; {x} and y + 2 &#x3D; {}”, y + 2);</td><td>这行代码会打印出 <code>x = 5 and y + 2 = 12</code></td><td></td></tr><tr><td>测试第一部分代码</td><td></td><td></td><td></td></tr></tbody></table><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cargo run</span><br><span class="line">   Compiling guessing_game v0.<span class="number">1.0</span> (file:<span class="comment">///projects/guessing_game)</span></span><br><span class="line">    Finished dev [unoptimized + debuginfo] <span class="title function_ invoke__">target</span>(s) <span class="keyword">in</span> <span class="number">6.44</span>s</span><br><span class="line">     Running `target/debug/guessing_game`</span><br><span class="line">Guess the number!</span><br><span class="line">Please input your guess.</span><br><span class="line"><span class="number">6</span></span><br><span class="line">You guessed: <span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="生成一个秘密数字"><a href="#生成一个秘密数字" class="headerlink" title="生成一个秘密数字"></a>生成一个秘密数字</h2><h2 id="以上啥也不是-我是个小趴菜-还是个萌新只会瑟瑟发抖-还是个宝宝-渺小如我-请收下我的膝盖"><a href="#以上啥也不是-我是个小趴菜-还是个萌新只会瑟瑟发抖-还是个宝宝-渺小如我-请收下我的膝盖" class="headerlink" title="以上啥也不是,我是个小趴菜,还是个萌新只会瑟瑟发抖,还是个宝宝,渺小如我,请收下我的膝盖,"></a>以上啥也不是,我是个小趴菜,还是个萌新只会瑟瑟发抖,还是个宝宝,渺小如我,请收下我的膝盖,</h2><p><a href="https://www.bilibili.com/video/BV1cY411k7Ua/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=57b0139bce6952af7898d18a278d1668">bilibili_鱼C-小甲鱼_翻译</a><br><a href="https://space.bilibili.com/361469957/?spm_id_from=333.999.0.0">bilibili_软件工艺师</a><br><a href="https://www.youtube.com/watch?v=mYvpEK40iX0">YouTube_bennyhuo 不是算命的</a></p>]]></content>
      
      
      <categories>
          
          <category> Rust程序设计语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rust Language </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>号外号外,我在切换域名的时候遇到了个大麻烦</title>
      <link href="/archives/85602126.html"/>
      <url>/archives/85602126.html</url>
      
        <content type="html"><![CDATA[<p><del>#准备另起一篇文章来访这个内容,明天</del></p><ul><li><p>三条线全部嗝屁,并且出现了一些不该有的画面,但并没有被dns劫持, 又拍云缓存控制 模板 全局 0 缓存时间—-全局缓存策略设置适合源站全是静态资源的服务，全局缓存时间设置为 0，将导致所有请求都会回源，开启请谨慎； 就是直接直连没有dns的状态,用来测试   暂时关闭访问限制</p><ul><li><p>回源地址一个一个测,发现不该有的换面来自Netlify,Netlify绑定自家域名后再测提示404,GitHub地址测试同为404,Vercel我忘了反正也是无法访问的样</p></li><li><p>重新配置Netlify的CDN域名为修改后的域名(仅支持国外,其实需要修改的是绑定域名,但要先创建一个NetlifyCDN,他会直接绑定这个域名,不要在原来的域名处DNSrecords修改,需要删除原来的DNS zon</p><ul><li>使用ultralinux.cn一级域名,他会自动添加一个<a href="http://www.ultralinux.cn的二级域名,一级域名为主要域名并在一级域名处右键配置cdn&dns/">www.ultralinux.cn的二级域名,一级域名为主要域名并在一级域名处右键配置CDN&amp;DNS</a></li><li>可以开启一下ipv6,会添加两行解析,最后删除原来的DNS zone   </li><li>无需配置域名注册商处的dns解析,除非你将不在使用CDN加速</li></ul></li><li><p>得出感觉,懒得测,因为成….好趴没开缓存,接着试一试,趁热打铁,嘿嘿</p><ul><li><p>GitHub首页可访问其他页面404(点击文章无反应,右键新窗口打开404)</p></li><li><p>将GitHub Pages绑定CDN加速域名后,文章404解决,只需输入ultralinux.cn Save一下(无需验证DNS and 开启https就可以的)</p></li><li><p>Vercel首页可正常访问,文章有的可正常访问,有的无反应,与内容多少无关(切GitHub再切回来可访问,不是浏览器缓存,应该和又拍云优点关系吧,,总之,不好使)</p></li><li><p>好趴,这,我 这个 无解   这使我想起讨厌的couldflare</p><p>  明天试一下将其绑定blog.ultralinux.cn域名然后能不能走cdn</p></li><li><p>好趴,这个GitHub它也嗝屁啦,貌似上次折磨做之后.两天后发现没有css样式啦,访问ultralinux.GitHub.io会跳回ultralinux.cn</p><p>  之前的回光返照不过是死法当活马医的自我感觉良好,┗|｀O′|┛ 嗷~~无依据.现在又只剩下Netlify了,,,,,</p></li><li><p>GitHub的真实情况应该是这样的.经过上述操作后,它能访问就是没有样式,在网页底部显示数据库加载中,文章是可以打开的就是没有css样式</p></li></ul></li><li><p>好了,由于没有时间</p></li><li><p>定档</p><ul><li>Netlify–GitHub–Vercel<ul><li>Vercel绑定blog域名企图cdn</li></ul></li></ul></li><li><p>优先级重新排列发现惊喜,绑定后的Vercel大陆访问奇好</p></li><li><p>Vercel(绑定后域名)&gt;Netlify(DNS zon)&gt;Github(绑定未验证)</p></li><li><p>鉴于Vercel此操作后,又拍云会握手失败,还是Netlify&gt;GitHub且回源host为Netlify,Vercel就绑定blog域名专门使用</p></li><li><p>2023&#x2F;2&#x2F;25</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> ultralinux_blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ultralinux.cn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo_SEO 个人博客网站搜索引擎优化</title>
      <link href="/archives/f532c7ad.html"/>
      <url>/archives/f532c7ad.html</url>
      
        <content type="html"><![CDATA[<hr><ul><li>在Baidu一下使用 <code>site:ultralinux.cn</code>康康有木有,没有的话,就开始吧<ul><li>(～￣(OO)￣)ブ冒号后边当然是自己的站点啦! 当然其他搜索引擎也可以的啦!</li></ul></li><li>建议(必须)搭配<a href="https://console.upyun.com/register/?invite=WjXMQuXX9">又拍云CDN</a>,反正人家的站点在没有使用之前Baidu都不搭理人家的<ul><li>听说是:”GitHub拒绝Baidu的蜘蛛 or Baidu忽略GitHub,我不知道”</li></ul></li></ul><h2 id="站点地图-Google-and-Baidu"><a href="#站点地图-Google-and-Baidu" class="headerlink" title="站点地图(Google and Baidu)"></a>站点地图(Google and Baidu)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><blockquote><p>博客根目录下的__config.yaml (框架配置文件),添加如下内容</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 站点地图</span></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure><ul><li>推送到你的静态托管or服务器之类的,更新一下(其实先预览一下也可以)<ul><li>分别访问,注意访问到的xml文件中的域名是否一致(框架配置文件中的rul项)<ul><li><a href="https://ultralinux.cn/sitemap.xml">https://ultralinux.cn/sitemap.xml</a><br>  <a href="https://ultralinux.cn/baidusitemap.xml">https://ultralinux.cn/baidusitemap.xml</a></li></ul></li></ul></li></ul><blockquote><p>创建 蛛蛛协议 在Hexo博客根目录下的source&#x2F;robots.txt</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo robots.txt</span></span><br><span class="line"><span class="attr">User-agent:</span> <span class="string">*</span></span><br><span class="line"><span class="attr">Allow:</span> <span class="string">/</span></span><br><span class="line"><span class="comment"># 替换为自家的域名,你知道的</span></span><br><span class="line"><span class="attr">Sitemap:</span> <span class="string">https://ultralinux.cn/sitemap.xml</span></span><br><span class="line"><span class="attr">Sitemap:</span> <span class="string">https://ultralinux.cn/baidusitemap.xml</span></span><br></pre></td></tr></table></figure><h2 id="Baidu-amp-百度收录"><a href="#Baidu-amp-百度收录" class="headerlink" title="Baidu&amp;百度收录"></a>Baidu&amp;百度收录</h2><ul><li><p><a href="https://ziyuan.baidu.com/">Baidu资源搜索平台</a>注册自家的账号(我的是第六天显示有一条了,应该一周内吧)</p><ul><li><p>用户中心–&gt;站点管理–&gt;添加网站</p><ul><li>第一步:输入网站__建议全站https:&#x2F;&#x2F;    ultralinux.cn 本人坚定的选择了不带www.(使用301解析到ultralinux.cn)</li><li>第二步:站点属性__看心情啦!</li><li>第三步:验证网站__HTML标签验证</li></ul><p>  将content&#x3D;”xxxxx”添加至主题配置文件的 <code>site_verification</code>里边</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">site_verification:</span></span><br><span class="line">  <span class="comment"># - name: google-site-verification</span></span><br><span class="line">  <span class="comment">#   content: xxxxxx</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">baidu-site-verification</span></span><br><span class="line">   <span class="attr">content:</span> <span class="string">codeva-8rno0VU0Ro</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="利用Hexo-baidu-url-submit-–ave插件-实现主动推送"><a href="#利用Hexo-baidu-url-submit-–ave插件-实现主动推送" class="headerlink" title="利用Hexo-baidu-url-submit –ave插件 实现主动推送"></a>利用Hexo-baidu-url-submit –ave插件 实现主动推送</h3><ul><li><p>百度站长平台–&gt;搜索服务–&gt;资源提交–&gt;普通收录–&gt;资源提交–API提交</p><ul><li><p>添加至框架配置文件__config.yal中</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主动推送百度，被百度收录</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">10</span> <span class="comment"># 提交最新的10个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">https://ultralinux.cn</span> <span class="comment"># 百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">XXXXXXX</span> <span class="comment"># 秘钥，推送接口--&gt;接口调用地址中token字段</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里，不用改</span></span><br></pre></td></tr></table></figure><blockquote><p>url 的值， 必须包含是百度站长平台注册的域名</p></blockquote>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://ultralinux.cn/</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><blockquote><p>添加至deployer项中,<a href="https://ultralinux.cn/archives/e5e92e82.html#%E5%88%A9%E7%94%A8hexo-deployer-git%E5%AE%9E%E7%8E%B0%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2">关于Deployment 一键部署</a></p></blockquote>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="comment"># 仓库,分支</span></span><br><span class="line">      <span class="attr">github:</span> <span class="string">https://github.com/ultralinux/ultralinux.github.io.git,run-gape</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br></pre></td></tr></table></figure></li><li><p>新链接的产生， hexo generate 会产生一个文本文件，里面包含最新的链接</p></li><li><p>新链接的提交， hexo deploy 会从上述文件中读取链接，提交至百度搜索引擎</p></li></ul></li></ul><h2 id="Google-amp-谷歌收录"><a href="#Google-amp-谷歌收录" class="headerlink" title="Google&amp;谷歌收录"></a>Google&amp;<a href="https://developers.google.com/search?hl=zh-cn#?modal_active=none">谷歌收录</a></h2><ul><li><p><a href="https://search.google.com/search-console/welcome">Google Search Console</a></p><ul><li>网址前缀__<a href="https://ultralinux.cn/">https://ultralinux.cn</a></li><li>HTML标记 验证 复制content&#x3D;”XXXXXXX字段” 注意:比较长</li><li>修改主题配置文件_config.butterfly.yml</li></ul>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">site_verification:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">google-site-verification</span></span><br><span class="line">   <span class="attr">content:</span> <span class="string">9srwxhduI_BRIWWEa9_3rjOxsNVSlmBH5jfxh34xxx</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">baidu-site-verification</span></span><br><span class="line">   <span class="attr">content:</span> <span class="string">codevF017iGXxxx</span></span><br></pre></td></tr></table></figure><p>  发布后验证</p><ul><li>关于之后的事情<ul><li><a href="https://search.google.com/search-console/about">Google Search Console</a></li></ul></li></ul></li></ul><h2 id="Bing-amp-必应"><a href="#Bing-amp-必应" class="headerlink" title="Bing&amp;必应"></a>Bing&amp;必应</h2><p><a href="https://www.bing.com/webmasters/about">Webmaster Tools</a></p><ul><li><p>手动添加<a href="https://ultralinux.cn/">https://ultralinux.cn</a></p><ul><li>HTML Meta标记 验证</li><li>复制content&#x3D;”xxxx字段”   注意:bing的name和前面两个的类型不太一样</li></ul>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">site_verification:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">google-site-verification</span></span><br><span class="line">   <span class="attr">content:</span> <span class="string">9srwxhduI_BRINWWEa9_3rjOxsNVSlmBH5jfxh34IO8</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">baidu-site-verification</span></span><br><span class="line">   <span class="attr">content:</span> <span class="string">codeva-F017iGX8Zo</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">msvalidate.01</span></span><br><span class="line">   <span class="attr">content:</span> <span class="string">B00C7D33XX3D13AXXXXF5CF0D9272</span></span><br></pre></td></tr></table></figure><ul><li>又拍云仍只使用国内加速,Netlify自带国外加速,可过验证且又拍云国外加速效果不佳&lt;Netlify自带加速</li></ul></li></ul><h2 id="URL持久化"><a href="#URL持久化" class="headerlink" title="URL持久化"></a>URL持久化</h2><p><a href="https://ultralinux.cn/archives/17e5a2b6.html">hexo持久化链接</a></p><ul><li>不影响Butterfly主题的<a href="https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%81%E9%9D%A2%E9%8C%A8%E9%BB%9E">页面锚点,太好惹</a></li><li>请勿删除自动生成的abbrlink:文章字段(特别是在修改标题后)</li><li>archives&#x2F;:abbrlink.html 可随意修改,但个人建议与指定的目录(不建议修改)保持一致且带有.hmtl后缀</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://ultralinux.cn</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">archives/:abbrlink.html</span> <span class="comment"># permalink: :title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure><h2 id="添加nofollow标签"><a href="#添加nofollow标签" class="headerlink" title="添加nofollow标签"></a>添加nofollow标签</h2><blockquote><p>Hexo-filter-nofollow插件<a href="https://github.com/hexojs/hexo-filter-nofollow/">项目地址</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-nofollow --save</span><br></pre></td></tr></table></figure><ul><li>修改框架配置文件__config.yml(修改了个寂寞)</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nofollow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;exclude1.com&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;exclude2.com&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Hexo-SEO-AutoPush插件"><a href="#Hexo-SEO-AutoPush插件" class="headerlink" title="Hexo-SEO-AutoPush插件"></a><a href="https://github.com/lete114/hexo-seo-autopush">Hexo-SEO-AutoPush插件</a></h2><p>参考<a href="https://zhangshier.vip/posts/41646/#%E4%B8%89%E5%AE%B6%E4%B8%BB%E5%8A%A8%E6%8E%A8%E9%80%81">链接</a></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.juanertu.com/archives/9013c8d8.html---%E5%B0%8F%E5%85%94%E5%85%94">https://blog.juanertu.com/archives/9013c8d8.html---小兔兔</a></p><p><a href="https://www.upyun.com/tech/article/557/%E4%BB%8E%20301%20%E8%B7%B3%E8%BD%AC%EF%BC%8C%E8%81%8A%E8%81%8A%E8%BE%B9%E7%BC%98%E8%A7%84%E5%88%99%E7%9A%84%E9%82%A3%E4%BA%9B%E5%B0%8F%E5%A6%99%E7%94%A8.html-------%E5%8F%88%E6%8B%8D%E4%BA%91301">https://www.upyun.com/tech/article/557/%E4%BB%8E%20301%20%E8%B7%B3%E8%BD%AC%EF%BC%8C%E8%81%8A%E8%81%8A%E8%BE%B9%E7%BC%98%E8%A7%84%E5%88%99%E7%9A%84%E9%82%A3%E4%BA%9B%E5%B0%8F%E5%A6%99%E7%94%A8.html-------又拍云301</a></p>]]></content>
      
      
      <categories>
          
          <category> ultralinux_blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ultralinux.cn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo_URL持久化链接</title>
      <link href="/archives/17e5a2b6.html"/>
      <url>/archives/17e5a2b6.html</url>
      
        <content type="html"><![CDATA[<h2 id="利用hexo-abbrlink插件实现链接持久化"><a href="#利用hexo-abbrlink插件实现链接持久化" class="headerlink" title="利用hexo-abbrlink插件实现链接持久化"></a>利用hexo-abbrlink插件实现链接持久化</h2><p>GitHub <a href="https://github.com/rozbo/hexo-abbrlink">项目地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><h2 id="修改hexo框架配置文件-config-yml文件"><a href="#修改hexo框架配置文件-config-yml文件" class="headerlink" title="修改hexo框架配置文件 _config.yml文件"></a>修改hexo框架配置文件 _config.yml文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">archives/:abbrlink.html</span></span><br></pre></td></tr></table></figure><h2 id="添加相应的配置信息"><a href="#添加相应的配置信息" class="headerlink" title="添加相应的配置信息"></a>添加相应的配置信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32      <span class="comment">#支持crc16（默认）和crc32</span></span><br><span class="line">  rep: hex        <span class="comment">#支持dec（默认）和hex</span></span><br><span class="line">  drafts: <span class="literal">false</span>   <span class="comment">#（true）处理草稿，（false）不处理草稿。false（默认）</span></span><br><span class="line">  <span class="comment"># 从目录树生成类别</span></span><br><span class="line">  <span class="comment"># depth: 要生成的目录树的最大深度，应大于0</span></span><br><span class="line">  auto_category:</span><br><span class="line">     <span class="built_in">enable</span>: <span class="literal">true</span>  <span class="comment">#true(默认)</span></span><br><span class="line">     depth:        <span class="comment">#3(默认)</span></span><br><span class="line">     over_write: <span class="literal">false</span> </span><br><span class="line">  auto_title: <span class="literal">false</span> <span class="comment">#启用自动标题，可按路径自动填充标题</span></span><br><span class="line">  auto_date: <span class="literal">false</span> <span class="comment">#启用自动日期功能，可以按今天的时间自动填充日期</span></span><br><span class="line">  force: <span class="literal">false</span> <span class="comment">#启用强制模式，在此模式下，插件将忽略缓存，并为每个帖子计算abbrlink，即使它已经有了abbrlink。</span></span><br></pre></td></tr></table></figure><h2 id="重新渲染"><a href="#重新渲染" class="headerlink" title="重新渲染"></a>重新渲染</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><ul><li><p>hexo 持久化链接中出现 undefined 的问题</p><ul><li><p>在执行 hexo clean &amp;&amp; hexo g 后莫名其妙的消失了神奇</p></li><li><p>在此之前我是用的是 </p><ul><li><p>hexo s (“server”: “hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server”)</p></li><li><p>hexo d(“deploy”: “hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy”,)</p></li><li><p>hexo s会出现undefined 的问题</p></li><li><p>hexo d则是完全无效的，和之前一样没有任何变化</p></li><li></li><li><p>貌似_好像,大概看到过 一片关于 什么延迟 什么的，忘记惹，算了，就当不存在的问题好伐QAQ</p></li></ul></li></ul></li></ul><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>生成的链接如下所示:</p><p><a href="https://ultralinux.cn/">看看我嘻嘻 o(<em>&#x2F;&#x2F;&#x2F;&#x2F;▽&#x2F;&#x2F;&#x2F;&#x2F;</em>)q</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https://post.zz173.com/posts/66c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https://post.zz173.com/posts/65535.html</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crc32 &amp; hex</span><br><span class="line">https://post.zz173.com/posts/8ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=",,,"></a>,,,</h2><p>删除.deploy_git文件夹</p><p>删除public文件夹</p><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p><p>Netlify_清除缓存并重试最新分支的提交</p><p>访问Netlify永久链接查看</p><p>cdn缓存更新奇慢:</p><ol><li>又拍云有问题,梅克金</li><li>Netlify有问题,默克金,性能拉胯</li></ol>]]></content>
      
      
      <categories>
          
          <category> ultralinux_blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ultralinux.cn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于本次建站所有_Hexo</title>
      <link href="/archives/e5e92e82.html"/>
      <url>/archives/e5e92e82.html</url>
      
        <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>test1：Hexo博客框架+GitHub项目文件托管+Netlify建站+ClouldFlare加速</p><ul><li><p>部署后正常</p></li><li><p>出现问题</p><ul><li>ClouldFlare<ul><li>使用移动数据网络无法访问，且宽带访问速度有所下降（感知明显卡顿加载牛速）</li></ul></li></ul></li><li><p>解决：</p><ul><li>去掉ClouldFlare加速后，只使用dns厂商自带的dns解析解决<ul><li>后得知CloudFlare加速大量被薅羊毛用于梯子导致被屏蔽已至极其拉胯（并且我个人在测试当中发现就第一天勉强能用，但仍不如不用）</li><li>又得知且意外发现，Netlify在大陆可以直接使用</li></ul></li></ul></li></ul><p>test2：Hexo博客框架+GitHub项目文件托管+Netlify建站</p><ul><li>部署后正常</li><li>遇到问题<ul><li>百度收录最佳方法——主动推送方案<ul><li>新链接的产生， hexo generate 会产生一个文本文件，里面包含最新的链接</li><li>新链接的提交， hexo deploy 会从上述文件中读取链接，提交至百度搜索引擎</li></ul></li><li>更新方案繁琐<ul><li>本地编辑 hexo s测试</li><li>git add . –&gt; git commit -m “0.0.0.0” –&gt; git push -u origin main</li><li>提交源码到GitHub，Netlify拉取源码后构建发布</li></ul></li></ul></li><li>解决：<ul><li>采用插件的方式一键部署</li><li>其实在hexo官网就有，是一开始就看到了，但感觉不是刚需</li><li>现在在两个问题下，发现这个方案可两难自解</li></ul></li></ul><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><ul><li>Hexo+Github+Netlify+又拍云CDN &amp;&amp; 七牛云图床 &amp;&amp; HTTPS &amp;&amp; 尽量使用免费的 &amp;&amp; 域名_阿里云|万网 &amp;&amp; SSL证书TrustAsia</li><li>&amp;&amp; Butterfly主题(推荐使用npm方式安装,并使用根目录下的__config.butterfly.yml主题配置文件以方便后续升级配置)<ul><li>本地编辑 hexo 测试</li><li>本地构建<ul><li>备份源码main</li><li>一键上传到GitHub，run-page</li></ul></li><li>netlify只拉取构建好(run-page分支)的文件，部署</li></ul></li></ul><h3 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h3><ul><li>+Vercel静态托管(test中)  <ul><li>拉取自己 GitHub 中的 Hexo 项目仓库<ul><li>选择我们 GitHub 中的 Hexo 项目源码仓库（注意：<strong>不是 <code>Hexo d</code> 命令部署的仓库，是 Hexo 源码仓库</strong>）</li></ul></li></ul></li><li>+Gitee(等待审核中)</li></ul><h4 id="Hexo博客框架"><a href="#Hexo博客框架" class="headerlink" title="Hexo博客框架"></a><a href="https://hexo.io/zh-cn/">Hexo</a>博客框架</h4><h4 id="Github代码仓库"><a href="#Github代码仓库" class="headerlink" title="Github代码仓库"></a><a href="https://github.com/">Github</a>代码仓库</h4><h4 id="Netlif静态托管"><a href="#Netlif静态托管" class="headerlink" title="Netlif静态托管"></a><a href="https://www.netlify.com/">Netlif</a>静态托管</h4><h4 id="又拍云CDN加速"><a href="#又拍云CDN加速" class="headerlink" title="又拍云CDN加速"></a><a href="https://www.upyun.com/">又拍云</a>CDN加速</h4><h4 id="七牛云图床-amp-CDN"><a href="#七牛云图床-amp-CDN" class="headerlink" title="七牛云图床&amp;CDN"></a><a href="https://www.qiniu.com/">七牛云</a>图床&amp;CDN</h4><h3 id="方案3-2023-2-22创建"><a href="#方案3-2023-2-22创建" class="headerlink" title="方案3_2023.2.22创建"></a>方案3_2023.2.22创建</h3><ul><li><p>Hexo博客框架,Butterfly主题,不喜欢魔改,尽量贴近主题官方文档的使用说明修改到自己喜欢的.</p><ul><li><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2></li><li>主题采用npm的方式安装,主题配置文件使用博客根目录下的_config.主题名.yml_<ul><li>有利于升级,npm方式安装的主题配置文件在根目录下的node_modules&#x2F;hexo-theme-butterfly&#x2F;config.yml</li><li>框架配置文件&gt;根目录下的_config.主题名.yml&gt;根目录下的node_modules&#x2F;hexo-theme-butterfly&#x2F;___config.yml</li><li>关于主题我主要看bilibili的卷二兔和主题官网,本人不喜魔改(悄悄话:”这个人类好像菜菜的雅姿”)</li></ul></li></ul></li><li><p>GitHub;两个仓库,源码仓库私有,一键部署仓库公开.; gitee;考虑中</p><ul><li>遇到的两个小问题<ul><li>添加README.md时,在GitHub Web端修改了文件造成的<a href="https://blog.csdn.net/m0_63217468/article/details/126667119">Git push命令报hint: Updates were rejected because the remote contains work that you do问题</a></li><li>会导致静态托管拉取源码构建时失败,会被误认为是一个模块<a href="https://www.cnblogs.com/pangya/p/15979539.html">解决github文件夹有向右的白色箭头并且不能打开的解决办法</a></li></ul></li></ul></li><li><p>Netlify;拉取已构建的公开仓库.Vercel;拉取源码的私有仓库</p><ul><li><p>Netlify可直接访问但比较拉胯,可注册域名绑定,会好一些; 注意：Netlify无法使用189邮箱注册,若你的GitHub绑定的邮箱是189邮箱^(*￣(oo)￣)^</p><ul><li><a href="https://blog.cuijiacai.com/blog-building/">由于我拉取的是已经构建好的文件,并非源码,所以,</a></li><li>看看我<a href="https://master--epic-hypatia-977c29.netlify.app/2018/08/25/hexo-learn">上传github版本控制,一键部署+Netlify</a></li></ul></li><li><p>Vercel完全不能访问且只能拉取源码,因为会默认执行两条命令.无法修改</p><ul><li><p><a href="https://cloud.tencent.com/developer/article/2065884">采用拉取自己 GitHub 中的 Hexo 项目仓库的方式创建Vercel Hexo项目</a>(因为使用模板相对于重新创建一个新的</p></li><li><p><a href="https://juejin.cn/post/7196570969573736508">不用模板创建Vercel项目,使用已有的就好了</a>,即使o(￣ヘ￣o＃)不是同一个仓库或分支名都是莫得关系的;咱用的是 Actions     删除原来绑定的github仓库</p><p>  文章末尾说:”直接Push到main分支是不会触发的”,经过个人测试是可以触发的(了解PR后,个人使用太麻烦了才试试的,嘻嘻)</p><p>  #博客根下.github&#x2F;workflows&#x2F;Production.yaml官方参考文件</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Vercel</span> <span class="string">Production</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">VERCEL_ORG_ID:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.VERCEL_ORG_ID</span> <span class="string">&#125;&#125;</span></span><br><span class="line">  <span class="attr">VERCEL_PROJECT_ID:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.VERCEL_PROJECT_ID</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">develop</span> <span class="comment"># 这里需要修改和你绑定的GitHub仓库的分支一样一样的名字,其余不变(无能ε=(´ο｀*))))</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">Deploy-Production:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Vercel</span> <span class="string">CLI</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">--global</span> <span class="string">vercel@latest</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Pull</span> <span class="string">Vercel</span> <span class="string">Environment</span> <span class="string">Information</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">vercel</span> <span class="string">pull</span> <span class="string">--yes</span> <span class="string">--environment=production</span> <span class="string">--token=$&#123;&#123;</span> <span class="string">secrets.VERCEL_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Project</span> <span class="string">Artifacts</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">vercel</span> <span class="string">build</span> <span class="string">--prod</span> <span class="string">--token=$&#123;&#123;</span> <span class="string">secrets.VERCEL_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Project</span> <span class="string">Artifacts</span> <span class="string">to</span> <span class="string">Vercel</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">vercel</span> <span class="string">deploy</span> <span class="string">--prebuilt</span> <span class="string">--prod</span> <span class="string">--token=$&#123;&#123;</span> <span class="string">secrets.VERCEL_TOKEN</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><hr></li><li><p>又拍云;CDN <a href="https://console.upyun.com/register/?invite=WjXMQuXX9">可点击此处注册</a> 哎嘿</p><ul><li><p>​一个小小的问题</p><ul><li><a href="https://www.z01.com/help/tech/3441.shtml">又拍云需配置ssl证书,否则会出现下一个参考链接的问题,然后建议开启TLS1.3</a></li></ul></li><li><p>QAQ我选了国内加速,</p><ul><li><p><a href="https://www.bilibili.com/video/BV1hF411v7e1/?spm_id_from=333.788&vd_source=57b0139bce6952af7898d18a278d1668">从13分45秒开始观看,</a>并忽略与又拍云无关的内容,嘿嘿你觉得怎么样? 我还开启啦分段缓存 感觉不错的样子.</p></li><li><p><a href="https://www.hananoryu.cn/posts/221113/">使用又拍云 CDN 加速你的 GitHub Pages 网站</a></p></li><li><p>源站地址使用HTTPS分别是 Netlify项目的链接&gt;GitHub一键部署公开仓库&gt;Vercel项目地址,回源host不配置</p><p>  Netlify永久链接每次发布都会改变,建议使用 Open profuction deploy 的那个链接</p></li><li><p>缓存过期配置-缓存规则:添加所有模板,首页模板在最上面的顺序</p></li></ul></li></ul></li><li><p>七牛云;图床</p><ul><li><a href="https://www.bilibili.com/video/BV1c44y1C7os/?spm_id_from=333.788&vd_source=57b0139bce6952af7898d18a278d1668">GitHub在我的尝试下体验并不是很好,故七牛云配合Picgo稳定版+Typora 不过这个教学深得我心(*╹▽╹)</a></li><li><a href="https://www.bbsmax.com/A/ke5jBkZa5r/">七牛云创建存储空间并绑定自定义域名-https协议</a>,全站使用https.(因为http不安全,其实是因为不显示,总之体验不好)</li><li><a href="https://www.yigujin.cn/1139.html">用 imageslim后缀命令为七牛云空间的图片瘦身</a></li><li></li></ul></li></ul><h4 id="关于hexo-s预览画面与ultralinux-cn页面不一致的问题-成功-上传-or-部署-的情况下"><a href="#关于hexo-s预览画面与ultralinux-cn页面不一致的问题-成功-上传-or-部署-的情况下" class="headerlink" title="关于hexo s预览画面与ultralinux.cn页面不一致的问题(成功 上传 or 部署 的情况下)"></a>关于hexo s预览画面与ultralinux.cn页面不一致的问题(成功 上传 or 部署 的情况下)</h4><ol><li>Github Pages 是有延迟滴,至于多久在下不详</li><li>关闭又拍云CDN,缓存也是一把双刃剑,重点在于取得微妙的平衡[手动狗头]</li></ol><ul><li>由于直接暂停(当然你也可以刷新指定位置文件,我嫌麻烦,每次不能相同的位置)可能要来回配置DNS(当然你直接看Netlify和Vercel的链接也行)<ul><li>缓存过期配置-缓存规则:使用全局 &#x2F;*.shift+8, 0分钟 开启 酱紫就可以不走缓存啦,嘿嘿! 我个人比价喜欢这种方式,<ul><li>全局缓存策略设置适合源站全是静态资源的服务，全局缓存时间设置为 0，将导致所有请求都会回源，开启请谨慎；</li><li>注意:配置生效每天只能刷新5次呦!</li></ul></li></ul></li></ul><h2 id="一些点"><a href="#一些点" class="headerlink" title="一些点"></a>一些点</h2><blockquote><p>修改package.json文件，优化执行命令</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    ......       </span><br><span class="line"><span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server&quot;</span></span><br><span class="line"># </span><br></pre></td></tr></table></figure><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>git_版本控制工具</li><li>node_JavaScript运行环境</li><li>npm,cnpm,yarn_包管理工具</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ node -v &amp;&amp; npm -v &amp;&amp; git -v</span><br><span class="line">v19.5.0</span><br><span class="line">9.4.1</span><br><span class="line">git version 2.39.1.windows.1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g <span class="comment"># 安装Hexo</span></span><br><span class="line">hexo -v</span><br><span class="line">hexo init &lt;文件夹名称&gt;  <span class="comment"># 使用hexo命令在指定的&lt;folder&gt;文件夹下初始化创建一个博客项目</span></span><br><span class="line"><span class="built_in">cd</span> &lt;文件夹名称&gt;         <span class="comment"># 进入创建好的项目目录</span></span><br><span class="line">npm install           <span class="comment"># 使用npm安装依赖 (克隆仓库需一般没有依赖重新安装)</span></span><br><span class="line">hexo clean   <span class="comment"># 清理各种缓存和旧文件</span></span><br><span class="line">hexo g       <span class="comment"># 生成静态文件</span></span><br><span class="line">hexo s       <span class="comment"># 预览</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置仓库"><a href="#配置仓库" class="headerlink" title="配置仓库"></a>配置仓库</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p>注册名.github.io 必须</p><p>ultralinux_blog 描述</p><p>Public 必须</p><p>Add a README file 仓库不能为空,因此创建一个</p><h3 id="Git版本控制"><a href="#Git版本控制" class="headerlink" title="Git版本控制"></a>Git版本控制</h3><blockquote><p>.gitignore 文件    # 这里的位置是博客根目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.vscode/</span><br><span class="line">.idea/</span><br><span class="line">/.idea/</span><br><span class="line">.idea</span><br><span class="line">.themes/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name ultralinux <span class="comment">#用户名和邮箱与GitHub保持一致</span></span><br><span class="line">git config --global user.email ultralinux@ultralinux.cn</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# ultralinux.github.io&quot;</span> &gt;&gt; README.md <span class="comment">#默认就这个,不管</span></span><br><span class="line">git init <span class="comment"># 初始化git仓库 or git clone 仓库地址 # 克隆</span></span><br><span class="line">git remote add origin https://github.com/github仓库地址/xxx.github.io.git  <span class="comment">#绑定</span></span><br><span class="line">git branch -M main <span class="comment"># 将分支重命名为main(强制)</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .  <span class="comment">#向git仓库添加文件</span></span><br><span class="line">git commit -m <span class="string">&quot;0.0.0.0&quot;</span>   <span class="comment">#本地仓库提交</span></span><br><span class="line">git push -u origin main   <span class="comment">#向GitHub远程仓库main分支推送代码</span></span><br></pre></td></tr></table></figure><h3 id="利用hexo-deployer-git实现一键部署"><a href="#利用hexo-deployer-git实现一键部署" class="headerlink" title="利用hexo-deployer-git实现一键部署"></a>利用<a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>实现<a href="https://hexo.io/zh-cn/docs/one-command-deployment">一键部署</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save<span class="comment">#安装</span></span><br></pre></td></tr></table></figure><blockquote><p>配置此插件.__config.yml   Hexo框架配置文件 博客根目录下</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/ultralinux/ultralinux.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">run-gape</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span> <span class="comment"># 请忽略这一行</span></span><br></pre></td></tr></table></figure><blockquote><p>优化执行命令package.json</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo generate&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;clean&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;netlify&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run clean &amp;&amp; npm run build&quot;</span><span class="punctuation">,</span>    <span class="comment">//这一行为新加请忽略,注意逗号.Netlify构建使用</span></span><br><span class="line"><span class="attr">&quot;localhost&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp; hexo g &amp; hexo s&quot;</span><span class="comment">//配合 npm run localhost  ,请忽略</span></span><br></pre></td></tr></table></figure><blockquote><p>本地构建与Netlify构建的区别</p></blockquote><ul><li>本地构建 hexo d 到仓库run-gape分支,Netlify拉取构建好的文件<ul><li>Netlify创建项目__选中仓库run-page分支</li><li>Basic build settings 全部留空</li></ul></li><li>Netlify构建 git add .–&gt;git commit -m “”–&gt;git push -u origin main 到仓库main分支,Netlify拉取源码并构建<ul><li>Netlify创建项目__选中仓库main分支</li><li>Basic build settings<ul><li>Base directory       留空,表示项目目录是仓库目录的根目录。</li><li>Build command     npm run netlify</li><li>Publish directory   public</li></ul></li></ul></li></ul><blockquote><p>hexo d 更新非新增文章 or 其他页面 须删除博客根目录下public and .deploy_git否则将不会上传至 远程仓库</p></blockquote><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>[]:</p>]]></content>
      
      
      <categories>
          
          <category> ultralinux_blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ultralinux.cn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 Windows 11 推荐软件</title>
      <link href="/archives/84b443ce.html"/>
      <url>/archives/84b443ce.html</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://yasuo.360.cn/">360压缩</a></li><li><a href="http://cidian.youdao.com/">有道云词典</a></li><li>Snipaste（截图软件-建议自带商城下载）</li><li><a href="https://copytranslator.github.io/">copytranslator</a>（翻译软件）、有道云词典</li><li>IDM6.4,及以上稳定（非正不更，没必要）因为6.4在w11下好看 ul度盘链接（<a href="https://pan.baidu.com/s/1grLmI_NY6uhCj8dnUCl7vA?pwd=ulcn">仅供学习</a>）</li><li><a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">VMware Workstation Pro</a> 16</li><li>Edge（<a href="https://www.microsoft.com/zh-cn/edge?r=1">新版</a>）<a href="https://pan.baidu.com/s/1vrJc1jleP8vVsV7T-9UUzw?pwd=ulcn">火狐浏览器国际版</a></li><li>装系统工具：<a href="https://cn.ultraiso.net/">软碟通</a>、<a href="http://rufus.ie/zh/">rufus</a>、<a href="https://www.ventoy.net/">Ventoy</a>、</li><li>卸载工具–<a href="https://pan.baidu.com/s/1kJKZARNqoMUUXriMGQY4rw?pwd=ulcn">geek</a>免费版</li><li><a href="https://pan.baidu.com/s/1K_Qp8RlHtdsxlilopHzNsg?pwd=ulcn">xshell+xsftp</a> 个人免费版 <em>提取ulcn</em></li><li>个人使用阿里云盘网页版，百度网盘分享</li><li>office2021Ltsc 专业增强版 ，使用<a href="https://otp.landian.vip/zh-cn/">office tool plus</a>部署，激活</li><li>多系统安装U盘强推 <a href="https://www.ventoy.net/">ventoy</a></li></ul><p>微软系统：<a href="https://msdn.itellyou.cn/">msdn</a>、Windows官方网页制作、<a href="https://www.wepe.com.cn/">微pe</a></p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown_Typora</title>
      <link href="/archives/5b96f4e8.html"/>
      <url>/archives/5b96f4e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><em>Hello,World!</em></p><p><strong>Hello,World!</strong></p><p><em><strong>Hello,World!</strong></em></p><p><del>Hello,World!</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>选择，走向人生巅峰</p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://img.ultralinux.cn/img/202302122213625.jpg?imageslim"><br><img src="https://img.ultralinux.cn/img/202302122213626.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302122213628.gif?imageslim"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://blog.ultralinux.cn/">点击跳转到ultralinux_blog</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li><p>A</p></li><li><p>C</p></li></ol><ul><li>A</li><li>B</li><li>C</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>名字</th><th>性别</th><th>生日</th></tr></thead></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p><code>hello</code></p>]]></content>
      
      
      <categories>
          
          <category> 小公举 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>是不是QAQ</title>
      <link href="/archives/d87f7e0c.html"/>
      <url>/archives/d87f7e0c.html</url>
      
        <content type="html"><![CDATA[<hr><meta name="referrer" content="no-referrer" /><p>我说在GitHub有篇文件里有这行很重要(( • ̀ω•́ )✧Failed to load resource: the server responded with a status of 403 ())</p><hr><h2 id="一、test"><a href="#一、test" class="headerlink" title="一、test"></a>一、test</h2><p>#&#96;&#96;&#96;<br>JavaScript<br>function a () {<br>    console.log(“hello world”)<br>}</p><h2 id="二、横向滑动test"><a href="#二、横向滑动test" class="headerlink" title="二、横向滑动test"></a>二、横向滑动test</h2><p>????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????</p><h3 id="上下折叠test"><a href="#上下折叠test" class="headerlink" title="上下折叠test"></a>上下折叠test</h3><p>1<br>1<br>1</p><p>1<br>1<br>1</p><p>1<br>1<br>1</p><p>1<br>1</p><h2 id="dlksfj"><a href="#dlksfj" class="headerlink" title="dlksfj"></a>dlksfj</h2><p>1<br>1<br>1<br>1</p><p>1<br>1<br>1<br>1</p><p>1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>j<br>j<br>j<br>j<br>j<br>j<br>j<br>j</p><p>j<br>j<br>jj</p><p>jj</p><p>j<br>j<br>j<br>j<br>j<br>j<br>j<br>jj<br>j</p><p>j<br>j<br>j<br>j<br>j<br>j<br>jj<br>j<br>j</p><pre><code></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Rust_1.入门指南</title>
      <link href="/archives/91c2a097.html"/>
      <url>/archives/91c2a097.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>官方</p></blockquote><p>  <a href="https://www.rust-lang.org/">Rust官网地址 </a><br>工具书<a href="https://kaisery.github.io/trpl-zh-cn/">《Rust 程序设计语言》_非官方翻译</a></p><p><a href="https://users.rust-lang.org/">用户论坛</a><br><a href="https://stackoverflow.com/questions/tagged/rust">stack overflow</a><br><a href="https://discord.com/invite/rust-lang">Rust官方 Discord</a></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rustc --version<span class="comment">//查看rust版本号</span></span><br><span class="line">rustc x.y.<span class="title function_ invoke__">z</span> (abcabcabc yyyy-mm-dd)<span class="comment">//最新稳定版本的版本号、对应的 Commit Hash 和 Commit 日期</span></span><br><span class="line">rustup update<span class="comment">//更新rust至最新版</span></span><br><span class="line">rustup <span class="keyword">self</span> uninstall<span class="comment">//卸载rust</span></span><br><span class="line">rustup doc<span class="comment">//在浏览器查看本地文档</span></span><br></pre></td></tr></table></figure><p>Rust 团队一直致力于借助 rust-analyzer 提供强大的 IDE 支持。详见<a href="https://kaisery.github.io/trpl-zh-cn/appendix-04-useful-development-tools.html">附录 D</a>。<br>命名习惯为 hello_world.rs，而不是 helloworld.rs。</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><ul><li>Linux</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/Desktop$ curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.3 https://sh.rustup.rs -sSf | sh</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/215b464303564e10a152e6bbaa59c465.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/3bd6b3d7e2b24cca9dea92c7276f5314.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/Desktop$ rustc --version</span><br><span class="line">rustc 1.63.0 (4b91a6ea7 2022-08-08)</span><br><span class="line"><span class="comment"># 最新稳定版本的版本号、对应的 Commit Hash 和 Commit 日期</span></span><br><span class="line"></span><br><span class="line">ultralinux@ultralinux-PC:~/Desktop$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/home/ultralinux/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin</span><br></pre></td></tr></table></figure><ul><li>Windows</li></ul><p><a href="https://www.rust-lang.org/tools/install">链接</a><br><img src="https://img-blog.csdnimg.cn/aa919b87ca4c4a048c6e7b480925e304.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/66cd92f4e19c460cace200e213de3845.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/72c2cee1f9d744ca87e0c9a9121ce979.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c6c30ad149ef4fcb85bdb668b918ac8a.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/0630c60c08314b1cb357935a91bdffb7.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/54ecbcefddda4198859643d1bc0d4874.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/8d5699061ff548e280141b131f8c8dfd.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/cdcba05f7bf74ea6998cc00e60046bbc.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/705bb4f394144d059e5d302a2446e1c3.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/1224f6b8ed9543b2a994a5ba77777137.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2bdf466d08f44388a43c39b6e8496761.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/3006ef54e71f46c695e7c14592957d94.png" alt="在这里插入图片描述"></p><h2 id="2-Hello-World"><a href="#2-Hello-World" class="headerlink" title="2.Hello,World!"></a>2.Hello,World!</h2><h3 id="Visual-Studio-Code，我的编辑器"><a href="#Visual-Studio-Code，我的编辑器" class="headerlink" title="Visual Studio Code，我的编辑器"></a>Visual Studio Code，我的编辑器</h3><p><a href="https://code.visualstudio.com/Download">Visual Studio Code 官网下载</a><br><img src="https://img-blog.csdnimg.cn/81c796901c894343a3f352aca6eab7ed.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/67d9c04d795140dfa111cc7b26aed71a.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/7ababebd9d6443cb8e398372dc285ac3.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/6f9b719fe4e34e5d909a110aca3b7b1d.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/6cecc6c76ce544579004f7e574f71520.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/eda9557d80674c62831ff257ad5c2eb7.png" alt="在这里插入图片描述"></p><h3 id="打印-Hello-world"><a href="#打印-Hello-world" class="headerlink" title="打印 Hello, world!"></a>打印 Hello, world!</h3><h4 id="创建项目目录"><a href="#创建项目目录" class="headerlink" title="创建项目目录"></a>创建项目目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/Desktop$ <span class="built_in">mkdir</span> ~/projects</span><br><span class="line">ultralinux@ultralinux-PC:~/Desktop$ <span class="built_in">cd</span> ~/projects</span><br><span class="line">ultralinux@ultralinux-PC:~/projects$ <span class="built_in">mkdir</span> hello_world</span><br><span class="line">ultralinux@ultralinux-PC:~/projects$ <span class="built_in">cd</span> hello_world</span><br></pre></td></tr></table></figure><h4 id="编写并运行Rust程序"><a href="#编写并运行Rust程序" class="headerlink" title="编写并运行Rust程序"></a>编写并运行Rust程序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/projects/hello_world$ code .</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c0f035dc764a498597f4b92b95ae7209.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/90784aee76ce40d898c1dbca3cf8fbab.png" alt="在这里插入图片描述"></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">\\CTRL + S 保存</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/projects/hello_world$ rustc main.rs //编译，Rust会输出一二进制可执行文件。</span><br><span class="line">ultralinux@ultralinux-PC:~/projects/hello_world$ <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>linux</th><th>win</th></tr></thead><tbody><tr><td>main  main.rs</td><td>main.exe  main.pdb  main.rs</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/projects/hello_world$ ./main //</span><br><span class="line">Hello, world!</span><br><span class="line">//在 Windows 上，输入命令 .\main.exe，而不是 ./main</span><br></pre></td></tr></table></figure><p>Rust 是一种 预编译静态类型（ahead-of-time compiled）语言，这意味着你可以编译程序，并将可执行文件送给其他人，他们甚至<strong>不需要安装 Rust</strong> 就可以运行。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>(参数或返回值) &#123;</span><br><span class="line">    函数体，函数体，我前面有四个空格哟，你看不到吧！ ;</span><br><span class="line">    Println!(<span class="string">&quot;字符串（参数）， 字符串（参数）&quot;</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fn</span> <span class="comment">//声明</span></span><br><span class="line">main <span class="comment">//特殊函数——最先运行的代码</span></span><br><span class="line">左花括号与函数声明置于同一行并以空格分隔，是良好的代码风格。</span><br><span class="line"><span class="built_in">println!</span> <span class="comment">//打印（输出）</span></span><br><span class="line">分号结尾（;） <span class="comment">//代表一个表达式的结束和下一个表达式的开始</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>函数</th><th>Rust宏（macro）</th></tr></thead><tbody><tr><td>println</td><td>println!</td></tr></tbody></table><h4 id="保持良好的风格"><a href="#保持良好的风格" class="headerlink" title="保持良好的风格"></a>保持良好的风格</h4><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/projects/hello_world$ rustfmt --version</span><br><span class="line">rustfmt <span class="number">1.5</span>.<span class="number">1</span>-<span class="title function_ invoke__">stable</span> (<span class="number">4</span>b91a6e <span class="number">2022</span>-<span class="number">08</span>-<span class="number">08</span>)</span><br><span class="line">ultralinux@ultralinux-PC:~/projects/hello_world$ rustfmt main.rs </span><br></pre></td></tr></table></figure><h2 id="3-Hello-Cargo"><a href="#3-Hello-Cargo" class="headerlink" title="3.Hello,Cargo!"></a>3.Hello,Cargo!</h2><ul><li>我们把代码所需要的库叫做 依赖（dependencies）</li><li>使用 Cargo 启动项目，则添加依赖项将更容易。</li></ul><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/Desktop$ cargo --version</span><br><span class="line">cargo <span class="number">1.63</span>.<span class="number">0</span> (fd9c4297c <span class="number">2022</span>-<span class="number">07</span>-<span class="number">01</span>)</span><br></pre></td></tr></table></figure><h3 id="使用Cargo创建项目"><a href="#使用Cargo创建项目" class="headerlink" title="使用Cargo创建项目"></a>使用Cargo创建项目</h3><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~$ cargo new hello_cargo <span class="comment">//使用cargo创建项目</span></span><br><span class="line">     Created <span class="title function_ invoke__">binary</span> (application) `hello_cargo` package</span><br><span class="line">ultralinux@ultralinux-PC:~$ cd hello_cargo/</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/ca9e7702efb74b15b56ac6e98d030ae4.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/25d20b03dbe54b5ab9c943d1d6571af7.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/70041b88511f42fa90c57e854a80c1cd.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/0f53902ee00c4089916ebb080a572510.png" alt="在这里插入图片描述"><br>？？？？？？？？？？？？</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/hello_cargo$ code .</span><br></pre></td></tr></table></figure><h3 id="cargo-toml"><a href="#cargo-toml" class="headerlink" title="cargo.toml"></a>cargo.toml</h3><p><img src="https://img-blog.csdnimg.cn/133f117118b6403ca3737de45eb46ed8.png" alt="在这里插入图片描述"></p><ul><li>Cargo 配置文件的格式—— TOML (Tom’s Obvious, Minimal Language)</li><li>[package]，是一个 区域（section）标题，表明下面的语句用来配置一个包 （package） 。随着文件增加更多的信息，还将增加其他片段（section）。<ul><li>name，项目名称</li><li>version，项目版本</li><li>edition，所须rust版本    <a href="https://kaisery.github.io/trpl-zh-cn/appendix-05-editions.html">附录E</a></li><li>authors，项目作者</li></ul></li><li>   [dependencies]，是罗列项目依赖的片段的开始。在 Rust 中，代码包被称为 crates。</li></ul><h3 id="src-x2F-main-rs"><a href="#src-x2F-main-rs" class="headerlink" title="src&#x2F;main.rs"></a>src&#x2F;main.rs</h3><p><img src="https://img-blog.csdnimg.cn/0926abd1e32f434381d231a756364b92.png" alt="在这里插入图片描述"></p><ul><li>Cargo 将代码放在 src 目录，同时项目根目录包含一个 Cargo.toml 配置文件。</li><li>Cargo 期望源文件存放在 src 目录中。项目根目录只存放 README、license 信息、配置文件和其他跟代码无关的文件。</li><li>若没有使用cargo创建项目，可以将其转化为一个 Cargo 项目。<ul><li>将代码放入 src 目录，并创建一个合适（相应的配置）的 Cargo.toml 文件。</li></ul></li></ul><h3 id="构建cargo项目-cargo-build"><a href="#构建cargo项目-cargo-build" class="headerlink" title="构建cargo项目 cargo build"></a>构建cargo项目 cargo build</h3><ul><li><p>默认的构建方法是调试构建（debug build）<br><img src="https://img-blog.csdnimg.cn/f0d3140a6d184b57adf59292e8cf23de.png" alt="在这里插入图片描述"></p></li><li><p>Windows<br><img src="https://img-blog.csdnimg.cn/96a62b6ed2234c339c306e573e538ab3.png" alt="在这里插入图片描述"></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ultralinux@ultralinux-PC:~/projects/hello_cargo$ ./target/debug/hello_cargo<span class="comment">//运行可执行文件</span></span><br><span class="line">Hello, world!</span><br></pre></td></tr></table></figure></li><li><p>Linux<br><img src="https://img-blog.csdnimg.cn/7ccb57dc1e5d4756adaee5fabb08b4a1.png" alt="在这里插入图片描述"></p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\ultra\projects\hello_cargo&gt; .\target\debug\hello_cargo.exe<span class="comment">//运行可执行文件</span></span><br><span class="line">Hello, world!</span><br></pre></td></tr></table></figure></li><li><p>首次运行cargo build会在顶层目录创建一个新文件——cargo.look（记录项目依赖的实际版本）</p><ul><li>永远也不需要碰这个文件，让 Cargo 处理它就行了。</li></ul></li></ul><h3 id="构建和运行cargo项目-cargo-run"><a href="#构建和运行cargo项目-cargo-run" class="headerlink" title="构建和运行cargo项目 cargo run"></a>构建和运行cargo项目 cargo run</h3><ol><li>cargo run——编译代码 + 执行结果<ul><li>若之前编译成功过，且源码未改变，那么就会直接运行二进制文件<br><img src="https://img-blog.csdnimg.cn/f58ab5eb063642caa850ea205bbd652c.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b556103a61e44a8e90ad8f333a50d172.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/33472f527b7a44388f89ca19aac82dcd.png" alt="在这里插入图片描述"></li></ul></li></ol><h3 id="cargo-check"><a href="#cargo-check" class="headerlink" title="cargo check"></a>cargo check</h3><ul><li>快速检查代码确保其可以编译但不产生可执行文件</li><li>编写代码时可以反复或定期运行 cargo check 确保它们可以编译。当准备好使用可执行文件时才运行 cargo build。<figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ltralinux@ultralinux-PC:~/projects/hello_cargo$ cargo check</span><br><span class="line">    Finished dev [unoptimized + debuginfo] <span class="title function_ invoke__">target</span>(s) <span class="keyword">in</span> <span class="number">0.00</span>s</span><br></pre></td></tr></table></figure></li></ul><h3 id="为发布（release）构建"><a href="#为发布（release）构建" class="headerlink" title="为发布（release）构建"></a>为发布（release）构建</h3><ul><li>cargo build –release<ul><li>编译时会进行优化<ul><li>代码会运行的更快，但编译时间更长</li></ul></li><li>会在target&#x2F;release而不是.target&#x2F;debug生成可执行文件</li></ul></li><li><h2 id="两种配置：-一个开发，你需要经常快速重新构建；-一个正式发布，不会经常重新构建，并且希望程序运行得越快越好。"><a href="#两种配置：-一个开发，你需要经常快速重新构建；-一个正式发布，不会经常重新构建，并且希望程序运行得越快越好。" class="headerlink" title="两种配置：  - 一个开发，你需要经常快速重新构建；  - 一个正式发布，不会经常重新构建，并且希望程序运行得越快越好。"></a>两种配置：<br>  - 一个开发，你需要经常快速重新构建；<br>  - 一个正式发布，不会经常重新构建，并且希望程序运行得越快越好。</h2>  测试代码的运行时间，请确保运行 cargo build –release 并使用 target&#x2F;release 下的可执行文件进行测试。</li></ul><h3 id="尽量使用cargo，并把cargo当做习惯"><a href="#尽量使用cargo，并把cargo当做习惯" class="headerlink" title="尽量使用cargo，并把cargo当做习惯"></a>尽量使用cargo，并把cargo当做习惯</h3><p>？？？？？？<br><img src="https://img-blog.csdnimg.cn/4c42d5dc10574cbebf55e5573fceedf5.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> Rust程序设计语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rust Language </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware虚拟机创建Linux系统创建链接克隆</title>
      <link href="/archives/3df717f2.html"/>
      <url>/archives/3df717f2.html</url>
      
        <content type="html"><![CDATA[<ul><li>节省系统安装时间</li><li>相对减少虚拟主机占用磁盘空间</li></ul><h2 id="壹、创建链接克隆准备"><a href="#壹、创建链接克隆准备" class="headerlink" title="壹、创建链接克隆准备"></a>壹、创建链接克隆准备</h2><p><img src="https://img.ultralinux.cn/img/202302151124440.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151124323.png?imageslim"></p><h2 id="贰、创建链接克隆"><a href="#贰、创建链接克隆" class="headerlink" title="贰、创建链接克隆"></a>贰、创建链接克隆</h2><p><img src="https://img.ultralinux.cn/img/202302151124820.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151124501.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151124459.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151126843.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151126241.png?imageslim"><br><img src="zvhttps://img.ultralinux.cn/img/202302151126189.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151126189.png?imageslim"><br><strong>注意</strong>：用于创建链接克隆的宿主机不能开机使用！！！！！！</p><h2 id="建议在乱搞虚拟机前拍个快照"><a href="#建议在乱搞虚拟机前拍个快照" class="headerlink" title="建议在乱搞虚拟机前拍个快照"></a>建议在乱搞虚拟机前拍个快照</h2><p><img src="https://img.ultralinux.cn/img/202302151133192.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151133053.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151133261.png?imageslim"><br>注意：每创建一个链接克隆，用于链接克隆的宿主机就会多一个快照，不要删除她快照会导致对应的链接克隆嗝屁<br><img src="https://img.ultralinux.cn/img/202302151133562.png?imageslim"></p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Xshell操作</title>
      <link href="/archives/7645713a.html"/>
      <url>/archives/7645713a.html</url>
      
        <content type="html"><![CDATA[<p><strong>一、图形化配置网络，关于配置VM的用处不大（也有其它方法）</strong><br>        1. 这里不建议使用DHCP获取IP地址(上我的船一个net8上网和xshell全都要)<img src="https://img-blog.csdnimg.cn/20200503221713737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>        2. 这里设置网关，虚拟机网关就是这个偶，不要忘了DNS服务器<img src="https://img-blog.csdnimg.cn/20200503222146494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>        3. 登录系统，图形化配置网卡（当然字符配置没什么不好的，我扩展一下）<img src="https://img-blog.csdnimg.cn/20200503222857765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>        4. 这里可以修改主机名（看需求，可以不改）<img src="https://img-blog.csdnimg.cn/2020050322311263.png" alt="在这里插入图片描述"><br>        5. 配置IP地址（IP v4），使用Tab建或方向键选择、空格更改<img src="https://img-blog.csdnimg.cn/2020050322440853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>        6. DNS服务器其他的也可以，网关是刚才自己配制NAT的网关<br> <a href="https://img-blog.csdnimg.cn/20200503230252219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70">选择第二个编辑</a><br><img src="https://img-blog.csdnimg.cn/20200503234508118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>        7. 查看，需要联网，<a href="https://img-blog.csdnimg.cn/20200504113252665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70">真机的VM net8网卡配置</a><br><img src="https://img-blog.csdnimg.cn/20200503234920938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>二、ssh远程控制——xshell</strong><br>             1. 第一次打开提示用户数据位置<img src="https://img-blog.csdnimg.cn/20200504113356462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>             2. 新建会话，<a href="https://img-blog.csdnimg.cn/20200504113721349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70">也可先建一个文件夹</a><img src="https://img-blog.csdnimg.cn/20200504113521101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>             3. <img src="https://img-blog.csdnimg.cn/20200504114232234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200504114301654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>             4. 模拟，为了方便记住密码<img src="https://img-blog.csdnimg.cn/20200504114313162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200504114322422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>三、xshell</strong></p><ol><li>设置当前会话，不建议设置默认的，<a href="https://img-blog.csdnimg.cn/20200507180240592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70">你可以复制会话</a><br>（对已创建的不生效）<img src="https://img-blog.csdnimg.cn/20200504130237456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>可以查看更多的历史命令不好吗？<img src="https://img-blog.csdnimg.cn/20200507164659750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>选择自己喜欢（不，效率和舒服我们全都要）<img src="https://img-blog.csdnimg.cn/20200507164846322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>开启日志（回顾时再写实验也不晚，忘了截图哦）</li></ol><p><img src="https://img-blog.csdnimg.cn/20200504130549737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="5"><li>查看的时候感觉不舒服（推荐一个软，，，）</li></ol><p><img src="https://img-blog.csdnimg.cn/20200507165703614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="6"><li>方便的使用rz上传时，不要忘了sz</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rz</span></span><br><span class="line">-bash: rz: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>不小心翻船了，，，，</p><ol><li>下载工具软件：lrzsz，安装方法：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install lrzsz -y</span></span><br></pre></td></tr></table></figure><strong>告诉你个小秘密：不要勾上下图的“发送文件到ASCII”哦，上船后会用不了的。</strong><br><img src="https://img-blog.csdnimg.cn/20200507171653391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><a href="https://img-blog.csdnimg.cn/20200507171858877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70">可以关闭这个提示，毕竟开心辣么重要</a><br>成功上船的小伙伴，如下图<br><img src="https://img-blog.csdnimg.cn/20200507172005506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>下载，（也可以直接拖拽到会话上传）<br><img src="https://img-blog.csdnimg.cn/20200507181144609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200507181454643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZsYWcyOTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Xshell使用</title>
      <link href="/archives/78eaa479.html"/>
      <url>/archives/78eaa479.html</url>
      
        <content type="html"><![CDATA[<h2 id="壹、全局修改"><a href="#壹、全局修改" class="headerlink" title="壹、全局修改"></a>壹、全局修改</h2><p><img src="https://img.ultralinux.cn/img/202302151423953.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151423979.png?imageslim" alt="修改用户数据（会话）保存位置"><br><img src="https://img.ultralinux.cn/img/202302151423607.png?imageslim" alt="我喜欢左键复制右键粘贴"><br><img src="https://img.ultralinux.cn/img/202302151423444.png?imageslim" alt="修改保存位置"></p><h2 id="贰、当前会话修改"><a href="#贰、当前会话修改" class="headerlink" title="贰、当前会话修改"></a>贰、当前会话修改</h2><p><img src="https://img.ultralinux.cn/img/202302151424634.png?imageslim" alt="注意：不建议修改全局，因为，，，"><br><strong>可以用复制会话的方式创建下一个会话</strong>–这绝对是个不错的方式<br><img src="https://img.ultralinux.cn/img/202302151424962.png?imageslim" alt="防止会话多了比较杂乱"><br><img src="https://img.ultralinux.cn/img/202302151425374.png?imageslim" alt="新建会话"><br><img src="https://img.ultralinux.cn/img/202302151425277.png?imageslim" alt="勾选记住用户名"><br><img src="https://img.ultralinux.cn/img/202302151426954.png?imageslim" alt="勾选记住密码"><br><img src="https://img.ultralinux.cn/img/202302151426321.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151426773.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151427392.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151427098.png?imageslim" alt="一个好的字体哼重要——分不清Il1会裂开"><br><img src="https://img.ultralinux.cn/img/202302151427496.png?imageslim" alt="记录下你的一顿操作，防止0-5 + 回头写文档更舒心"></p><h2 id="叁、关于lrzsz"><a href="#叁、关于lrzsz" class="headerlink" title="叁、关于lrzsz"></a>叁、关于lrzsz</h2><p><img src="https://img.ultralinux.cn/img/202302151431377.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151432296.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151432811.png?imageslim" alt="这个提示烦不烦呢？"><br><img src="https://img.ultralinux.cn/img/202302151432436.png?imageslim" alt="这是成功的象征"></p><p>其实你可以直接把文件拖到会话框</p><h2 id="肆、下载"><a href="#肆、下载" class="headerlink" title="肆、下载"></a>肆、下载</h2><p><img src="https://img.ultralinux.cn/img/202302151432458.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151433467.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151433498.png?imageslim"></p><h2 id="伍、多个会话同时执行相同命令"><a href="#伍、多个会话同时执行相同命令" class="headerlink" title="伍、多个会话同时执行相同命令"></a>伍、多个会话同时执行相同命令</h2><p><img src="https://img.ultralinux.cn/img/202302151433671.png?imageslim"></p><h2 id="陆、复制会话，修改为相应主机"><a href="#陆、复制会话，修改为相应主机" class="headerlink" title="陆、复制会话，修改为相应主机"></a>陆、复制会话，修改为相应主机</h2><p><img src="https://img.ultralinux.cn/img/202302151433542.png?imageslim" alt="疯狂右键+Ctrl D快速复制"><br><img src="https://img.ultralinux.cn/img/202302151434588.png?imageslim"></p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation Pro配置安装系统环境</title>
      <link href="/archives/1688cb51.html"/>
      <url>/archives/1688cb51.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、新建虚拟机"><a href="#一、新建虚拟机" class="headerlink" title="一、新建虚拟机"></a>一、新建虚拟机</h2><p><img src="https://img.ultralinux.cn/img/202302151330045.png?imageslim"></p><h2 id="二、选择自定义"><a href="#二、选择自定义" class="headerlink" title="二、选择自定义"></a>二、选择自定义</h2><p><img src="https://img.ultralinux.cn/img/202302151329142.png?imageslim"></p><h2 id="三、下一步，"><a href="#三、下一步，" class="headerlink" title="三、下一步，"></a>三、下一步，</h2><p><img src="https://img.ultralinux.cn/img/202302151329629.png?imageslim"></p><h2 id="四、选择稍后安装"><a href="#四、选择稍后安装" class="headerlink" title="四、选择稍后安装"></a>四、选择稍后安装</h2><p>若这里直接使用”安装程序光盘映射文件”选项安装系统会默认以最小化安装方式安装（不建议）<br><img src="https://img.ultralinux.cn/img/202302151329189.png?imageslim"></p><h2 id="五、选择我们要安装的系统类别"><a href="#五、选择我们要安装的系统类别" class="headerlink" title="五、选择我们要安装的系统类别"></a>五、选择我们要安装的系统类别</h2><p><img src="https://img.ultralinux.cn/img/202302151329692.png?imageslim"></p><h2 id="六、虚拟机的名称与位置"><a href="#六、虚拟机的名称与位置" class="headerlink" title="六、虚拟机的名称与位置"></a>六、虚拟机的名称与位置</h2><p><img src="https://img.ultralinux.cn/img/202302151329228.png?imageslim"></p><h2 id="七、虚拟机CPU核心数配置"><a href="#七、虚拟机CPU核心数配置" class="headerlink" title="七、虚拟机CPU核心数配置"></a>七、虚拟机CPU核心数配置</h2><p><img src="https://img.ultralinux.cn/img/202302151329645.png?imageslim"></p><h2 id="八、虚拟机内存大小配置"><a href="#八、虚拟机内存大小配置" class="headerlink" title="八、虚拟机内存大小配置"></a>八、虚拟机内存大小配置</h2><p><img src="https://img.ultralinux.cn/img/202302151329123.png?imageslim"></p><h2 id="九、网络类型"><a href="#九、网络类型" class="headerlink" title="九、网络类型"></a>九、网络类型</h2><p><img src="https://img.ultralinux.cn/img/202302151329570.png?imageslim"></p><h2 id="十、下一步，"><a href="#十、下一步，" class="headerlink" title="十、下一步，"></a>十、下一步，</h2><p><img src="https://img.ultralinux.cn/img/202302151329049.png?imageslim"></p><h2 id="十一、磁盘类型"><a href="#十一、磁盘类型" class="headerlink" title="十一、磁盘类型"></a>十一、磁盘类型</h2><p><img src="https://img.ultralinux.cn/img/202302151329498.png?imageslim"></p><h2 id="十二、新建磁盘"><a href="#十二、新建磁盘" class="headerlink" title="十二、新建磁盘"></a>十二、新建磁盘</h2><p><img src="https://img.ultralinux.cn/img/202302151329049.png?imageslim"></p><h2 id="十三、下一步"><a href="#十三、下一步" class="headerlink" title="十三、下一步"></a>十三、下一步</h2><p><img src="https://img.ultralinux.cn/img/202302151329363.png?imageslim"></p><h2 id="十四、下一步"><a href="#十四、下一步" class="headerlink" title="十四、下一步"></a>十四、下一步</h2><p><img src="https://img.ultralinux.cn/img/202302151329991.png?imageslim"></p><h2 id="十五、环境完成"><a href="#十五、环境完成" class="headerlink" title="十五、环境完成"></a>十五、环境完成</h2><p><img src="https://img.ultralinux.cn/img/202302151329544.png?imageslim"></p><h2 id="十六、编辑虚拟机"><a href="#十六、编辑虚拟机" class="headerlink" title="十六、编辑虚拟机"></a>十六、编辑虚拟机</h2><p><img src="https://img.ultralinux.cn/img/202302151329552.png?imageslim"></p><h2 id="十七、指定安装的ISO镜像文件位置，确定"><a href="#十七、指定安装的ISO镜像文件位置，确定" class="headerlink" title="十七、指定安装的ISO镜像文件位置，确定"></a>十七、指定安装的ISO镜像文件位置，确定</h2><p><img src="https://img.ultralinux.cn/img/202302151329324.png?imageslim"></p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation Pro 16</title>
      <link href="/archives/da61c4cb.html"/>
      <url>/archives/da61c4cb.html</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">官方下载位置</a><br><del>*   <a href="https://pan.baidu.com/s/1OjC1UhsftYUqstsmPSDhCA?pwd=ulcn">ul度盘</a>提取码：ulcn</del></li></ul><h2 id="安装建议："><a href="#安装建议：" class="headerlink" title="安装建议："></a>安装建议：</h2><p>一首下一步即可，关闭自动检查更新<br><img src="https://img.ultralinux.cn/img/202302151238318.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151238981.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151238705.png?imageslim"></p><p>修改网段。如有需要，关闭DHCP服务（禁止自动分配ip）<br><img src="https://img.ultralinux.cn/img/202302151238958.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151238748.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151238245.png?imageslim" alt="这里的192.168.100.1，（所在网段）点1的IP地址是无法使用的因为在安装VMware时自动生成的VMnet8虚拟网卡IP地址默认为100.1用于宿主机与虚拟机通信使用（所修改网段的点1）IP地址，并且当修改为其他网段时VMnet8虚拟网卡的IP地址也会自动修改为相应网段的点1IP地址。"><br><img src="https://img.ultralinux.cn/img/202302151238786.png?imageslim" alt="若想使用相应网段点1IP地址为网关需要在宿主机VMnet8修改为其他同网段不使用的IP地址，这样就可以使用192.168.100.1（相应网段的.1IP地址）注意，当修改VMnet虚拟网卡网段时宿主机的VMnet8IP地址还会自动修改为相应IP的点1IP地址，再次修改即可"></p><p>当然也可以以创建多个虚拟网卡并选择需要的模式–桥接模式、仅主机模式、NAT模式。</p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VMwareWorkstation扫描文件夹添加虚拟机</title>
      <link href="/archives/bed6f8c8.html"/>
      <url>/archives/bed6f8c8.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.ultralinux.cn/img/202302151208907.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151208396.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151208979.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151208132.png?imageslim"></p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>最小化安装CentOS7.9</title>
      <link href="/archives/c5acd6aa.html"/>
      <url>/archives/c5acd6aa.html</url>
      
        <content type="html"><![CDATA[<h2 id="壹、方向键上下选择直接安装，回车"><a href="#壹、方向键上下选择直接安装，回车" class="headerlink" title="壹、方向键上下选择直接安装，回车"></a>壹、方向键上下选择直接安装，回车</h2><p><img src="https://img.ultralinux.cn/img/202302151055728.png?imageslim"></p><h2 id="贰、等待到安装界面，选择系统语言"><a href="#贰、等待到安装界面，选择系统语言" class="headerlink" title="贰、等待到安装界面，选择系统语言"></a>贰、等待到安装界面，选择系统语言</h2><p><img src="https://img.ultralinux.cn/img/202302151058398.png?imageslim"></p><h2 id="叁、"><a href="#叁、" class="headerlink" title="叁、"></a>叁、</h2><p><img src="https://img.ultralinux.cn/img/202302151100408.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151100695.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151100728.png?imageslim"></p><h2 id="肆、建议手动分区"><a href="#肆、建议手动分区" class="headerlink" title="肆、建议手动分区"></a>肆、建议手动分区</h2><ul><li>创建boot分区，&#x2F;boot分区大小为1024M,文件系统类为xfs；</li></ul><p>boot分区：是引导分区，作用：系统启动，在boot分区存着grub，内核文件等，centos7或8应该给1024M,考虑到后期yum update更新系统时有足够的空间存新的内核；在centos5或6上，boot分区给200M即可。</p><ul><li>创建swap分区，swap分区最小为2G，文件系统类型为swap；</li></ul><p>swap交换分区：swap分区通常被称为交换分区，这是一块特殊的硬盘空间，即当实际内存不够用的时候，操作系统会从内存中取出一部分暂时不用的数据，放在交换分区中，从而为当前运行的程序腾出足够的内存空间。一般swap分区为物理内存的1.5<del>2倍，当物理机内存多于16G后，swap分区给8</del>16G都可以。如果系统使用到了swap分区，建议添加物理内存或排查一下系统上是否有非法程序。</p><ul><li>创建&#x2F;根分区，&#x2F;根分区50G,文件类型为xfs；</li></ul><p>&#x2F;根分区所有文件的逻辑存储位置，绝对路径的开始标志。<br><img src="https://img.ultralinux.cn/img/202302151104839.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151104384.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151104816.png?imageslim"></p><h2 id="伍、设置root管理员密码，完成配置。"><a href="#伍、设置root管理员密码，完成配置。" class="headerlink" title="伍、设置root管理员密码，完成配置。"></a>伍、设置root管理员密码，完成配置。</h2><p><img src="https://img.ultralinux.cn/img/202302151104871.png?imageslim"><br><img src="https://img.ultralinux.cn/img/202302151104780.png?imageslim"></p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7最小化安装，安装图形化界面</title>
      <link href="/archives/3248ed79.html"/>
      <url>/archives/3248ed79.html</url>
      
        <content type="html"><![CDATA[<p><strong>控制功能</strong></p><pre><code>[root@ultralinux ~]# yum groupinstall &quot;X Window System&quot;</code></pre><p><strong>图形化程序</strong></p><pre><code>[root@ultralinux ~]# yum groupinstall -y &quot;GNOME Desktop&quot;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 系统初始化</title>
      <link href="/archives/75224c2.html"/>
      <url>/archives/75224c2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>禁用防火墙与selinux</p></blockquote><pre><code>iptables -Fsystemctl stop firewalld &amp;&amp; systemctl disable firewalldsetenforce 0sed -i &#39;s/SELINUX=enforcing/SELINUX=disabled/g&#39; /etc/selinux/config</code></pre><blockquote><p>系统源与第三方源</p></blockquote><pre><code>wget -O /etc/yum.repos.d/CentOS-Base.repo  http://mirrors.aliyun.com/repo/Centos-7.repowget -O /etc/yum.repos.d/epel.repo  http://mirrors.aliyun.com/repo/epel-7.repoyum clean all &amp;&amp; yum makecache</code></pre><blockquote><p>安装常用工具</p></blockquote><pre><code>yum install wget net-tools telnet tree nmap sysstat lrzsz dos2unix bind-utils -y</code></pre><blockquote><p>关闭swap</p></blockquote><pre><code>swapoff -ased -ri &#39;s/.*swap.*/#&amp;/&#39; /etc/fstab</code></pre><blockquote><p>时间同步</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kali切换阿里源</title>
      <link href="/archives/b951507a.html"/>
      <url>/archives/b951507a.html</url>
      
        <content type="html"><![CDATA[<pre><code>$ sudo vi /etc/apt/sources.list</code></pre><p><img src="https://img.ultralinux.cn/img/202302141048131.png?imageslim"></p><h4 id="插入阿里云的kali"><a href="#插入阿里云的kali" class="headerlink" title="插入阿里云的kali"></a>插入阿里云的kali</h4><pre><code>deb https://mirrors.aliyun.com/kali kali-rolling main non-free contribdeb-src https://mirrors.aliyun.com/kali kali-rolling main non-free contrib</code></pre><p><img src="https://img.ultralinux.cn/img/202302151026184.png?imageslim"></p><h4 id="kali的apt源"><a href="#kali的apt源" class="headerlink" title="kali的apt源"></a>kali的apt源</h4><pre><code>Kali Rolling：及时更新版（最常用的源）</code></pre>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>光猫（电信）桥接，路由器（略）拨号</title>
      <link href="/archives/5ac9b52d.html"/>
      <url>/archives/5ac9b52d.html</url>
      
        <content type="html"><![CDATA[<h1 id="第零步（略）"><a href="#第零步（略）" class="headerlink" title="第零步（略）"></a>第零步（略）</h1><p>为什么要。。。。。</p><h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><p><img src="https://oscimg.oschina.net/oscnet/up-cb7ce4dffdfbe19c1e43e96c60c64d1dfe6.jpg"></p><p><img src="https://oscimg.oschina.net/oscnet/up-cc77994f36837095de43327a50f42355b5f.png"></p><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><p><img src="https://oscimg.oschina.net/oscnet/up-b6a4c16d68d98a86affd59a5f274f068760.png"><img src="https://oscimg.oschina.net/oscnet/up-49ec715420dcbaaf3bd811136b5ffe36d10.png"></p><p><img src="https://oscimg.oschina.net/oscnet/up-c917d604909b6768ad68dafe0488bb6e738.png"><img src="https://oscimg.oschina.net/oscnet/up-db984f8b2ddaa667695974bec5bb80edcb0.png"></p><p>左键点在密码框内右键选中检查或查看元素。。。这样找起来方便（将password替换为text后回车）</p><p><img src="https://oscimg.oschina.net/oscnet/up-751ffb646bc98060cd5cfb6ba2dcbb7ab45.png"></p><p>若你心知道密码可忽略这一步。（注意：当然也可以问客服或维修人员，但极可能非常麻烦，很不舒服）</p><p><img src="https://oscimg.oschina.net/oscnet/up-5224e41e98441e74ac8716245b115f38789.png"></p><p>注意：改为桥接将会无法联网，正常。但请保持连接路由器</p><p><img src="https://oscimg.oschina.net/oscnet/up-54c1b8d2bab525e9ea72a0078efa5268c2b.png"></p><p>关闭光猫的无线模式即WiFi</p><p><img src="https://oscimg.oschina.net/oscnet/up-c281c78d7cc0f77b82af5d02ba67ad53625.png"></p><p>关闭DHCP服务（注意：关闭后将无法连接光猫，正常）</p><p><img src="https://oscimg.oschina.net/oscnet/up-2e280c16d6b9f50e1085caa06ae40eb81e4.png"></p><h1 id="最后一步使用路由器拨号上网（略）"><a href="#最后一步使用路由器拨号上网（略）" class="headerlink" title="最后一步使用路由器拨号上网（略）"></a>最后一步使用路由器拨号上网（略）</h1><p>比较懒的我都是直接重置路由器的狗头</p><h1 id="扩展：如有需要可使用网线（物理）访问光猫"><a href="#扩展：如有需要可使用网线（物理）访问光猫" class="headerlink" title="扩展：如有需要可使用网线（物理）访问光猫"></a>扩展：如有需要可使用网线（物理）访问光猫</h1><p>1.将要登录光猫的设备使用网线与光猫iptv接口外的其他空余网口相连；<br>2.设置登录设备的IP地址与光猫为同一网段，此处应为连接光猫的网卡。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3074059a38080881013a096a4aa6cd7cf02.png"></p><p><img src="https://oscimg.oschina.net/oscnet/up-f4cb83306e2a5ec90cf41861248cfd41f8e.png"></p><h1 id="关于IPv6"><a href="#关于IPv6" class="headerlink" title="关于IPv6"></a>关于IPv6</h1><p><img src="https://oscimg.oschina.net/oscnet/up-df7fd56c3d3a61fac107a9678a10f67447e.png"></p><p>开启后这里默认不用配置（IPv6的DHCP服务无需关闭，反正也关不掉）</p><p><img src="https://oscimg.oschina.net/oscnet/up-a5f92e1d9c8a734d515b7460b5379f0d21c.png"></p><p><img src="https://oscimg.oschina.net/oscnet/up-8968a629fbc9e5c1a50bdfb612805fc7e22.png"></p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
